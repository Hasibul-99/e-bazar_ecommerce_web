[{"/home/tushar/Documents/react/e-bazar/src/router/App.js":"1","/home/tushar/Documents/react/e-bazar/src/layouts/Private.js":"2","/home/tushar/Documents/react/e-bazar/src/router/public-router.js":"3","/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/LeftSidebar.js":"4","/home/tushar/Documents/react/e-bazar/src/pages/Auth/SignUp.js":"5","/home/tushar/Documents/react/e-bazar/src/pages/Auth/MarchentSignup.js":"6","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/Products.js":"7","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/Category.js":"8","/home/tushar/Documents/react/e-bazar/src/pages/Public/UserProfile.js":"9","/home/tushar/Documents/react/e-bazar/src/scripts/api-service.js":"10","/home/tushar/Documents/react/e-bazar/src/scripts/helper.js":"11","/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/RandomProduct.js":"12","/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/ProductModalView.js":"13","/home/tushar/Documents/react/e-bazar/src/index.js":"14","/home/tushar/Documents/react/e-bazar/src/router/private-router.js":"15","/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/TopNavBar.js":"16","/home/tushar/Documents/react/e-bazar/src/pages/Private/common/Navbar.js":"17","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/ProductAdd.js":"18","/home/tushar/Documents/react/e-bazar/src/pages/Auth/Registration.js":"19","/home/tushar/Documents/react/e-bazar/src/scripts/checkRes.js":"20","/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/ItemType.js":"21","/home/tushar/Documents/react/e-bazar/src/layouts/Auth.js":"22","/home/tushar/Documents/react/e-bazar/src/layouts/Public.js":"23","/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/Footer.js":"24","/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/BundlesPackagesOffer.js":"25","/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/index.js":"26","/home/tushar/Documents/react/e-bazar/src/pages/Auth/ForgetPassword.js":"27","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/Orders.js":"28","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/Brand.js":"29","/home/tushar/Documents/react/e-bazar/src/pages/Private/common/Pagination.js":"30","/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/NonBrandItems.js":"31","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/ProductEdit.js":"32","/home/tushar/Documents/react/e-bazar/src/scripts/api.js":"33","/home/tushar/Documents/react/e-bazar/src/router/auth-route.js":"34","/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/QuantityInput.js":"35","/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/TopSlider.js":"36","/home/tushar/Documents/react/e-bazar/src/pages/Private/common/Sidebar.js":"37","/home/tushar/Documents/react/e-bazar/src/pages/Public/Product-List.js":"38","/home/tushar/Documents/react/e-bazar/src/pages/Auth/SignIn.js":"39","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/SubCategory.js":"40","/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/CartBox.js":"41","/home/tushar/Documents/react/e-bazar/src/contexts/OrderListContext.js":"42","/home/tushar/Documents/react/e-bazar/src/pages/Public/OrderDetails.js":"43"},{"size":1258,"mtime":1610101828189,"results":"44","hashOfConfig":"45"},{"size":1522,"mtime":1613499237994,"results":"46","hashOfConfig":"45"},{"size":841,"mtime":1613522558595,"results":"47","hashOfConfig":"45"},{"size":6335,"mtime":1613216297922,"results":"48","hashOfConfig":"45"},{"size":4055,"mtime":1610111201602,"results":"49","hashOfConfig":"45"},{"size":12243,"mtime":1613218961520,"results":"50","hashOfConfig":"45"},{"size":6827,"mtime":1613217836766,"results":"51","hashOfConfig":"45"},{"size":10352,"mtime":1612716127951,"results":"52","hashOfConfig":"45"},{"size":16130,"mtime":1613522476828,"results":"53","hashOfConfig":"45"},{"size":3459,"mtime":1611509295308,"results":"54","hashOfConfig":"45"},{"size":349,"mtime":1613217907718,"results":"55","hashOfConfig":"45"},{"size":4994,"mtime":1613240964821,"results":"56","hashOfConfig":"45"},{"size":5871,"mtime":1613242901218,"results":"57","hashOfConfig":"45"},{"size":551,"mtime":1612716127951,"results":"58","hashOfConfig":"45"},{"size":1682,"mtime":1613522366312,"results":"59","hashOfConfig":"45"},{"size":7241,"mtime":1613216489244,"results":"60","hashOfConfig":"45"},{"size":6065,"mtime":1613216538409,"results":"61","hashOfConfig":"45"},{"size":16810,"mtime":1613497597610,"results":"62","hashOfConfig":"45"},{"size":1924,"mtime":1610042510617,"results":"63","hashOfConfig":"45"},{"size":399,"mtime":1610039120735,"results":"64","hashOfConfig":"45"},{"size":1960,"mtime":1612716127955,"results":"65","hashOfConfig":"45"},{"size":1098,"mtime":1613456619266,"results":"66","hashOfConfig":"45"},{"size":1609,"mtime":1613235967827,"results":"67","hashOfConfig":"45"},{"size":308,"mtime":1609262940438,"results":"68","hashOfConfig":"45"},{"size":311,"mtime":1612716127951,"results":"69","hashOfConfig":"45"},{"size":541,"mtime":1607267262775,"results":"70","hashOfConfig":"45"},{"size":217,"mtime":1606759338016,"results":"71","hashOfConfig":"45"},{"size":7841,"mtime":1613522440272,"results":"72","hashOfConfig":"45"},{"size":9408,"mtime":1612716127951,"results":"73","hashOfConfig":"45"},{"size":746,"mtime":1611500759212,"results":"74","hashOfConfig":"45"},{"size":1697,"mtime":1612718031294,"results":"75","hashOfConfig":"45"},{"size":21179,"mtime":1613231584870,"results":"76","hashOfConfig":"45"},{"size":1438,"mtime":1613205209338,"results":"77","hashOfConfig":"45"},{"size":944,"mtime":1609262940438,"results":"78","hashOfConfig":"45"},{"size":1222,"mtime":1612716127951,"results":"79","hashOfConfig":"45"},{"size":2364,"mtime":1612716127955,"results":"80","hashOfConfig":"45"},{"size":2775,"mtime":1613216987113,"results":"81","hashOfConfig":"45"},{"size":5022,"mtime":1613242234891,"results":"82","hashOfConfig":"45"},{"size":2939,"mtime":1613499442307,"results":"83","hashOfConfig":"45"},{"size":9351,"mtime":1612716127955,"results":"84","hashOfConfig":"45"},{"size":7954,"mtime":1613523705354,"results":"85","hashOfConfig":"45"},{"size":1683,"mtime":1613243644693,"results":"86","hashOfConfig":"45"},{"size":8055,"mtime":1613522400128,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},"17s8sv9",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":13,"source":"167","usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"121"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"121"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"121"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tushar/Documents/react/e-bazar/src/router/App.js",["196"],"import React, { Component } from 'react';\n\nimport {\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\n\nimport PublicLayout from \"../layouts/Public\";\nimport PrivateLayout from \"../layouts/Private\";\nimport AuthLayout from \"../layouts/Auth\";\n\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Redux\nimport {Provider} from 'react-redux';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLogin: true,\n            isAdmin: false,\n        }\n    }\n    componentDidMount() {\n        // store.dispatch(loadUser());\n    }\n\n    render() {\n        return (\n            <>\n            {/* // <Provider store={store}> */}\n                <Switch>\n                    <Route path=\"/admin\" render={props => <PrivateLayout {...props} />} ></Route>\n                    <Route path=\"/auth\" render={props => <AuthLayout {...props} />}></Route> \n                    <Route path=\"/\" render={props => <PublicLayout {...props} />}></Route>\n                    <Redirect from=\"/\" to=\"/\" /> \n                </Switch>\n                <ToastContainer position=\"top-right\"/>\n            {/* // </Provider> */}\n            </>\n        )\n    }\n}\n\nexport default App;",["197","198"],"/home/tushar/Documents/react/e-bazar/src/layouts/Private.js",[],["199","200"],"/home/tushar/Documents/react/e-bazar/src/router/public-router.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/LeftSidebar.js",["201","202","203","204","205","206","207","208","209","210","211"],"import React, {Fragment, useEffect, useState} from 'react';\nimport {Link,useHistory} from \"react-router-dom\";\nimport { getData } from \"../../../scripts/api-service\";\nimport { GET_CATEGORY_MENU_LIST } from \"../../../scripts/api\";\n\nexport default function LeftSidebar() {\n    const [category, setCategory] = useState();\n    const [brand, setBrand] = useState();\n    const [subCategory, setSubCategory] = useState();\n    const [productsCategory, setProductsCategory] = useState([]);\n    \n    useEffect(() => {\n        getcategoryMenu();\n    }, []);\n\n    const getcategoryMenu = async () => {\n        let res = await getData(GET_CATEGORY_MENU_LIST);\n\n        if (res?.data?.isSuccess) {\n            let {categories, categoriesBrand, categoriesBrandSubCategories} = res?.data?.data;\n            let brandCategory = categories.filter(e => !e.isUnbrandCategory);\n\n            setCategory(brandCategory);\n            setBrand(categoriesBrand);\n            setSubCategory(categoriesBrandSubCategories);\n        }\n    };\n\n    useEffect(() => {\n        if (category && category.length) {\n            let caTlist = [];\n            category.forEach(cat => {\n                let list = {\n                    _id: cat._id,\n                    parent: cat.name\n                },\n                brands = brand?.length ? brand.filter(b => b.category === cat._id ) : [];\n\n                if (brands && brands.length) {\n                    let clild = [];\n                            \n                    brands.forEach(bra => {\n                        let subCat = subCategory?.length ? subCategory.filter(sc => sc.categoryBrand === bra._id) : [];\n\n                        clild.push({\n                            _id: bra._id,\n                            parent: bra.name,\n                            child: subCat.map(e => { return {name: e.name, _id: e._id} })\n                        })\n                    });\n                    list.child = clild;\n                }\n                caTlist.push(list);\n            });\n\n            setProductsCategory(caTlist)\n        }\n    }, [subCategory])\n\n    return (\n        <div className=\"deznav left-sidebar\" id=\"js-public-left-sidebar\">\n            <div className=\"deznav-scroll mm-active ps ps--active-y\">\n\t\t\t\t<ul className=\"metismenu mm-show\" id=\"menu\">\n                    {\n                        productsCategory.map((item, i) => {\n                            return <Category item={item} key={i}></Category> \n                        } )\n                    }\n                </ul>\n\t\t\t</div>\n        </div>\n    )\n}\n\nfunction Category (props) {\n    const {item} = props;\n    const [isActive, setIsActive] = useState(false);\n    const history = useHistory();\n    \n    const slectCategory = () => {\n        setIsActive(!isActive);\n        changePage();\n    };\n\n    const changePage = () => {\n        history.push(`/products?category=${item._id}`);\n    }\n\n    return (\n        // className=\"mm-active\"\n        <li className={`menu-list ${isActive ? 'has-selected' : ''}`}>\n            <a onClick={slectCategory} className={`ai-icon menu-list-header ${item?.child?.length ? \" has-arrow\" : \"\"}`} \n                href=\"javascript:void()\" aria-expanded=\"false\">\n                <i className=\"flaticon-381-television\"></i>\n                <span className=\"nav-text\">{item.parent}</span>\n            </a>\n            {/* className=\"mm-collapse\" */}\n            <ul className={`p-0 ${!isActive ? 'mm-collapse' : ''}`} aria-expanded=\"false\">\n                {\n                    item?.child?.length ? item.child.map((sChild, j) => {\n                        return <ChildCategory sChild={sChild} key={j}></ChildCategory>\n                    }) : \"\"\n                }\n            </ul>\n        </li>\n    )\n};\n\nfunction ChildCategory(props) {\n    const {sChild} = props;\n    const [isActive, setIsActive] = useState(false);\n    const history = useHistory();\n\n    const selectChildCategory = () => {\n        setIsActive(!isActive);\n        changePage();\n    };\n\n    const updateQueryStringParameter = (uri, key, value) => {\n        var re = new RegExp(\"([?&])\" + key + \"=.*?(&|#|$)\", \"i\");\n        if (uri.match(re)) {\n          return uri.replace(re, '$1' + key + \"=\" + value + '$2');\n        } else {\n          var hash =  '';\n          if( uri.indexOf('#') !== -1 ){\n              hash = uri.replace(/.*#/, '#');\n              uri = uri.replace(/#.*/, '');\n          }\n          var separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";    \n          return uri + separator + key + \"=\" + value + hash;\n        }\n    }\n\n    const changePage = () => {\n        let {location} = history,\n            {search} = location;\n        \n        let query = search ? updateQueryStringParameter(search, 'categoryBrand', sChild._id) : \"?categoryBrand=\" + sChild._id;\n        history.push(`/products?categoryBrand=` + sChild._id);\n    }\n\n    const contentUpdate = (item) => {\n        let {location} = history,\n            {search} = location;\n        \n        let query = search ? updateQueryStringParameter(search, 'categoryBrandSubCategory', item._id) : \"categoryBrandSubCategory=\" + item._id;\n        history.push(`/products?categoryBrandSubCategory=` + item._id);\n    }\n\n    return (\n        <li className={`${isActive ? 'has-child-selected' : ''}`}>\n            <a onClick={selectChildCategory} className={`${sChild?.child?.length ? \"has-child-arrow\" :\"\"}`} \n                href=\"javascript:void()\" aria-expanded=\"false\">\n                {sChild.parent}</a>\n                {\n                    sChild?.child?.length ? \n                    <ul className={`ml-3 ${!isActive ? 'mm-collapse': ''}`} aria-expanded=\"false\">\n                        {\n                            sChild?.child?.length ? sChild.child.map((tChild, k) => {\n                                return (\n                                    <Fragment key={k}>\n                                        <li className=\"cursore-pointer\">\n                                            <a onClick={() => contentUpdate(tChild)}>{tChild.name}</a>\n                                        </li>\n                                    </Fragment>\n                                )\n                            }) : \"\" \n                        }\n                    </ul>  : \"\"\n                }                                                      \n        </li>\n    )\n}\n",["212","213"],"/home/tushar/Documents/react/e-bazar/src/pages/Auth/SignUp.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Auth/MarchentSignup.js",["214","215"],"import React, {useState, Fragment} from 'react';\nimport {Link} from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport Cookies from \"js-cookie\";\nimport { toast } from 'react-toastify';\n\nimport logo from \"../../assets/images/Easyexpress24-final.png\";\nimport { postData } from \"../../scripts/api-service\";\nimport { CREATE_MARCHANT_USER } from \"../../scripts/api\";\nimport { checkRes } from \"../../scripts/checkRes\";\n\nexport default function MarchentSignup() {\n    const { register, handleSubmit, errors } = useForm();\n    const [error, setError] = useState('');\n\n    const onSubmit = async (data) => {\n        let userData = {\n            \"email\": data.email,\n            \"password\": data.password,\n            \"name\": data.name,\n            \"mobile\": data.mobile,\n            \"nid\": data.nid,\n            \"address\": data.address,\n            \"dateOfBirth\": data.dateOfBirth,\n            \"marchant\":{\n                \"bussinessName\": data.bussinessName,\n                \"marchantDesignation\": data.marchantDesignation,\n                \"bankInfo\":{\n                    \"accountName\": data.accountName,\n                    \"accountNumber\": data.accountNumber,\n                    \"branch\": data.branch\n                }\n            }\n        }\n\n        let res = await postData(CREATE_MARCHANT_USER, userData, \"no_token\");\n\n        if (res?.status && checkRes(res.status) && res.data.isSuccess) {\n            // Cookies.set(\"expressToken\", res.data.data);\n            toast.success('Admin will varify you!');\n            setTimeout(() => {\n                window.location = \"/\";\n            }, 1500);\n        } else if(!res.data.isSuccess) {\n            setError(res.data.msg);\n        }\n\n        if (error) {\n            toast(error);\n        }\n    };\n\n    return (\n        <Fragment>\n            <div className=\"sign-part\">\n                <div className=\"sign-content\">\n                    <div className=\"back-arrow\">\n                        <Link to=\"/\"><i className=\"fas fa-arrow-left\"></i></Link>\n                    </div>\n                    <div className=\"content-cover\">\n                        <Link to=\"/\"><img src={logo} alt=\"logo\"/></Link>\n                        {/* <h1>Biggest online vegan food ecommerce store in worldwide.</h1> */}\n                    </div>\n                </div>\n                <div className=\"sign-form\">\n                    <div className=\"sign-card\">\n                        <ul className=\"nav nav-tabs\">\n                            <li> <span className=\"nav-link active\"> Marchent SIGN UP</span></li>\n                        </ul>\n                    </div>\n\n                    <div className=\"tab-pane active\" id=\"signIn\">\n                        <div className=\"register-content\">\n                            <div className=\"sign-heading\">\n                                <h2>Register</h2>\n                                <p>Setup a new account in a minute.</p>\n                            </div>\n\n                            <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n                                <div className=\"form-group\">\n                                    <label for=\"exampleFormControlInput1\">Name</label>\n                                    <input type=\"text\" className=\"form-control\" name=\"name\"\n                                        ref={register} placeholder=\"Enter Name\"/>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label for=\"exampleFormControlInput1\">Email address</label>\n                                    <input type=\"email\" className=\"form-control\" name=\"email\"\n                                        ref={register}  placeholder=\"Enter Email\"/>\n                                </div>\n\n                                <fieldset className=\"form-group\">\n                                    <div className=\"row\">\n                                        <label className=\"col-form-label col-sm-3 pt-0\">Gender</label>\n                                        <div className=\"col-sm-9\">\n                                            <div className=\"form-check\">\n                                                <input className=\"form-check-input\" type=\"radio\" name=\"gender\" \n                                                    ref={register} value=\"male\" checked/>\n                                                <label className=\"form-check-label\">\n                                                    Male\n                                                </label>\n                                            </div>\n                                            <div className=\"form-check\">\n                                                <input className=\"form-check-input\" type=\"radio\" name=\"gender\" \n                                                    ref={register}  value=\"female\"/>\n                                                <label className=\"form-check-label\">\n                                                    Female\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </fieldset>\n\n                                <div className=\"form-group\">\n                                    <label>Mobile Number</label>\n                                    <input type=\"text\" className=\"form-control\"\n                                        name=\"mobile\" ref={register}  placeholder=\"Enter Mobile Number\"/>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label  >Date of Birth</label>\n                                    <input type=\"date\" className=\"form-control\" \n                                        name=\"dateOfBirth\" ref={register} placeholder=\"Enter Birthdate\"/>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label  >Business Name</label>\n                                    {/* <select className=\"form-control form-control-lg\" name=\"businessCatelog\" ref={register}>\n                                        <option>Option 1</option>\n                                        <option>Option 2</option>\n                                        <option>Option 3</option>\n                                    </select> */}\n                                    <input type=\"text\" className=\"form-control\" \n                                        name=\"bussinessName\" ref={register} placeholder=\"Enter Business Name\"/>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>You're Role</label>\n                                    <select className=\"form-control form-control-lg\" name=\"marchantDesignation\" ref={register}>\n                                        <option>Owner</option>\n                                        <option>Manager</option>\n                                        <option>Employer</option>\n                                        <option>Other</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label >Address</label>\n                                    <textarea className=\"form-control form-control-lg\" name=\"address\" ref={register}></textarea>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Name of A/C Holder</label>\n                                    <input type=\"text\" className=\"form-control\" \n                                        name=\"accountName\" ref={register} placeholder=\"Enter Name of A/C Holder\"/>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Bank A/C</label>\n                                    <input type=\"text\" className=\"form-control\" name=\"accountNumber\" ref={register} placeholder=\"Enter Bank A/C\"/>\n                                </div>\n\n                                \n                                <div className=\"form-group\">\n                                    <label>Name of Branch</label>\n                                    <input type=\"text\" className=\"form-control\" name=\"branch\" ref={register} placeholder=\"Enter Name of Branch\"/>\n                                </div>\n\n                                \n                                <div className=\"form-group d-none\">\n                                    <label>District</label>\n                                    <input type=\"text\" className=\"form-control\" name=\"district\" ref={register}  placeholder=\"Enter District\"/>\n                                </div>\n\n                                \n                                <div className=\"form-group d-none\">\n                                    <label>City</label>\n                                    <input type=\"text\" className=\"form-control\" name=\"city\" ref={register}  placeholder=\"Enter City\"/>\n                                </div>\n\n                                \n                                <div className=\"form-group d-none\">\n                                    <label>Name of Shop</label>\n                                    <input type=\"text\" className=\"form-control\" name=\"nameOfShop\" ref={register} placeholder=\"Enter Name of Shop\"/>\n                                </div>\n                                \n                                <div className=\"form-group d-none\">\n                                    <label  >Shop Address</label>\n                                    <input type=\"text\" className=\"form-control\" name=\"shopAddress\" ref={register} placeholder=\"Enter Shop Address\"/>\n                                </div>\n                                \n                                <div className=\"form-group  d-none\">\n                                    <label  >Product Discretion</label>\n                                    <input type=\"text\" className=\"form-control\" name=\"productDiscription\" ref={register} placeholder=\"Enter Product Discretion\"/>\n                                </div>\n\n                                \n                                <div className=\"form-group d-none\">\n                                    <label  >Facebook Page Link</label>\n                                    <input type=\"text\" className=\"form-control\" name=\"fbpage\" ref={register}  placeholder=\"Enter Facebook Page Link\"/>\n                                </div>\n\n                                \n                                <div className=\"form-group\">\n                                    <label  >NID Number</label>\n                                    <input type=\"text\" className=\"form-control\" name=\"nid\" ref={register}  placeholder=\"Enter NID Number\"/>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label  >Password</label>\n                                    <input type=\"password\" className=\"form-control\" name=\"password\" ref={register}  placeholder=\"Enter Password\"/>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label  >Repeat Password</label>\n                                    <input type=\"password\" className=\"form-control\" name=\"repassword\" ref={register}  placeholder=\"Enter Password Again\"/>\n                                </div>\n\n                                <button type=\"submit\" className=\"btn btn-outline-success\">SIGN IN NOW</button>\n                            </form>\n\n                            <div className=\"form-bottom\">\n                                <p>Already have an account? click on the <span onClick={() => window.location=\"/auth/registration\"}>( sign in )</span> button above.</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/Products.js",["216","217"],"/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/Category.js",["218","219"],"import React, {Fragment, useState, useEffect} from 'react';\nimport {Link} from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport $ from \"jquery\";\nimport Pagination from \"../common/Pagination\";\n\n// import { checkRes } from \"../../../scripts/checkRes\";\nimport { postData, getData, putData } from \"../../../scripts/api-service\";\nimport { CREATE_CATEGORY, GET_CATEGORY_LIST, UPDATE_CATEGORY } from \"../../../scripts/api\";\nimport { dateFormat } from \"../../../scripts/helper\";\nimport swal from 'sweetalert2';\n\nexport default function Category() {\n    const [categoryName, setCategoryName] = useState();\n    const [isUnbrandCategory, setIsUnbrandCategory] = useState(false);\n    const [categoryList, setCategoryList] = useState([]);\n    const [updateCategory, setUpdateCategory] = useState();\n    const [updateCategoryName, setUpdateCategoryName] = useState();\n\n    const changeHandeler = (e) => {\n        let value = e.target.value;\n        setCategoryName(value);\n    }\n\n    const addCategory = async () => {\n        if (categoryName) {\n            let res = await postData(CREATE_CATEGORY, {name: categoryName, isUnbrandCategory: isUnbrandCategory});\n\n            if (res?.data?.isSuccess) {\n                toast.success(\"Category Add successfully\");\n                $(\"#create-category-modal\").modal('hide');\n                setCategoryName(\"\");\n            } else {\n                toast.error(res.msg);\n            }\n        } else {\n            toast(\"Category name is required\");\n        }\n    }\n\n    const getCategoryList = async (page) => {\n        let query = page ? GET_CATEGORY_LIST + '?page='+ page : GET_CATEGORY_LIST;\n        let res = await getData(query);\n\n        if (res?.data?.isSuccess) {\n            setCategoryList(res.data.data);\n        } else {\n            toast(\"Something went wrong\");\n        }\n    }\n\n    const deleteCategory = (data) => {\n        swal.fire({\n            title: 'Are you sure?',\n            text:'You want to delete this Category!',\n            icon: 'warning',\n            showCancelButton: \"true\",\n            confirmButtonText:'Yes, Approve it!',\n            cancelButtonText: 'Cancel',\n          }).then( async result => {\n            if (result.value) {\n                let res = await getData(GET_CATEGORY_LIST);\n\n                if (res?.data?.isSuccess) {\n                    setCategoryList(res.data.data);\n                } else {\n                    toast(\"Something went wrong\");\n                }\n            }\n        })\n    }\n\n    const updateCategoryContent = (data) => {\n        setUpdateCategory(data);\n        setUpdateCategoryName(data.name);\n        $('#update-category-modal').modal('show');\n    }\n\n    const changeUpdateHandeler = (e) => {\n        let value = e.target.value;\n        setUpdateCategoryName(value);\n    }\n\n    const editCategory = async () => {\n        if (updateCategoryName) {\n            let res = await putData(UPDATE_CATEGORY, {name: updateCategoryName, _id: updateCategory._id});\n\n            if (res?.data?.isSuccess) {\n                toast(\"Category Update Successfully\");\n                $(\"#update-category-modal\").modal('hide');\n                setUpdateCategory();\n                setUpdateCategoryName();\n\n                getCategoryList();\n            } else {\n                toast(\"Something went wrong\");\n            }\n        } else {\n            toast(\"Category name is required\");\n        }\n    }\n\n    const handelPagination = (page) => {\n        getCategoryList(page);\n    }\n\n    useEffect(() => {\n        getCategoryList()\n    }, []);\n\n    return (\n        <Fragment>\n        <div className=\"category\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h4 className=\"card-title\">All Categories</h4>\n                            <button type=\"button\" className=\"btn light btn-success\" data-toggle=\"modal\" data-target=\"#create-category-modal\">\n                                <i className=\"fa fa-plus mr-2\"></i> Add Category\n                            </button>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"table-responsive\">\n                                <table className=\"table table-responsive-md\">\n                                    <thead>\n                                        <tr>\n                                            <th><strong>NAME</strong></th>\n                                            <th><strong>Date</strong></th>\n                                            <th><strong>Status</strong></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            categoryList.length ? (\n                                                categoryList.map((category, i) => {\n                                                    return (<tr key={i}>\n                                                        <td>{category.name}</td>\n                                                        <td>{dateFormat(category.creatingDate)}</td>\n                                                        <td>{category.status ? \"Active\" : \"Inactive\"}</td>\n                                                        <td>\n                                                            <div className=\"d-flex\">\n                                                                {\n                                                                    !category.isUnbrandCategory ? <Link to={`/admin/brand/${category._id}`} \n                                                                    className=\"btn btn-dark shadow btn-xs sharp mr-1\"><i className=\"fa fa-eye\"></i></Link> : \"\"\n                                                                }\n                                                                <a onClick={() => updateCategoryContent(category)} className=\"btn btn-primary shadow btn-xs sharp mr-1\">\n                                                                    <i className=\"fa fa-pencil\"></i>\n                                                                </a>\n                                                                {/* <a onClick={() => deleteCategory(category)} className=\"btn btn-danger shadow btn-xs sharp\">\n                                                                    <i className=\"fa fa-trash\"></i>\n                                                                </a> */}\n                                                            </div>\n                                                        </td>\n                                                    </tr>)\n                                                })\n                                            ) : <h3>No Data found</h3>\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n\n                            <Pagination\n                                    handelPagination={handelPagination}\n                            ></Pagination>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"create-category-modal\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Category Add</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\"><span>&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-12\">\n                                <label>Category Name</label>\n                                <input type=\"text\" name=\"category_name\" onChange={changeHandeler} className=\"form-control\"/>\n                            </div>\n                        </div>\n                        <div className=\"form-check\">\n                            <input type=\"checkbox\" className=\"form-check-input\" onChange={(e) => setIsUnbrandCategory(e.target.checked)} id=\"exampleCheck1\"/>\n                            <label className=\"form-check-label\" for=\"exampleCheck1\">Check it for make it non brand category.</label>\n                        </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-danger light\" data-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={() => addCategory()}>Save</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"update-category-modal\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Category Update</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\"><span>&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-12\">\n                                <label>Category Name</label>\n                                <input type=\"text\" name=\"update_category_name\" value={updateCategoryName} onChange={changeUpdateHandeler} className=\"form-control\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-danger light\" data-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={() => editCategory()}>Update</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </Fragment>\n    )\n}\n","/home/tushar/Documents/react/e-bazar/src/pages/Public/UserProfile.js",["220","221"],"/home/tushar/Documents/react/e-bazar/src/scripts/api-service.js",[],"/home/tushar/Documents/react/e-bazar/src/scripts/helper.js",["222","223","224"],"import moment from \"moment\";\n\nexport const dateFormat = (date) => {\n  if (date) return moment(date).format(\"DD MMM YYYY\");\n  else return \"\";\n};\n\nexport const loadPageVar = (sVar) => {\n  return unescape(window.location.search.replace(new RegExp(\"^(?:.*[&\\\\?]\" + escape(sVar).replace(/[\\.\\+\\*]/g, \"\\\\$&\") + \"(?:\\\\=([^&]*))?)?.*$\", \"i\"), \"$1\")) || 1;\n}","/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/RandomProduct.js",["225","226","227","228"],"import React, {Fragment, useState, useEffect, useContext} from 'react';\nimport $ from \"jquery\";\nimport { useHistory } from \"react-router-dom\";\nimport { getData } from \"../../../scripts/api-service\";\nimport { GET_RPODUCT } from \"../../../scripts/api\";\nimport demoProduct from \"../../../assets/images/demo-product.png\";\nimport ProductModalView from \"../../Components/Common/ProductModalView\";\nimport {orderListContext} from \"../../../contexts/OrderListContext\";\n\n\nexport default function RandomProduct() {\n    const [products, setProducts] = useState([]);\n    const [page, setpage] = useState(1);\n    const history = useHistory();\n\n    useEffect(() => {\n        getProductList();\n    }, []);\n\n    const getProductList = async () => {\n        let res = await getData(GET_RPODUCT);\n\n        if (res?.data?.isSuccess) {\n            setProducts(res?.data?.data);\n        }\n    };\n\n    const viewMore = () => {\n        history.push('/products');\n    }\n\n    return (\n        <div className=\"random-products mt-4\">\n            <div className=\"card\">\n                <div className=\"card-header d-none\"></div>\n                <div className=\"card-header\">\n                    <div className=\"row\">\n                        {   \n                            products.length ? \n                            products.map(product => {\n                                return <div className=\"col-12 col-sm-6 col-md-6 col-lg-6 col-xl-3\" key={product._id}>\n                                        <ProductCard product={product}></ProductCard>\n                                    </div>\n                            }) : <h3>No Product Found</h3>\n                        }\n\n                        <div className=\"col-12 container\">\n                            <div className=\"button-effect\">\n                                <button class=\"effect effect-4 button-4 float-righ\" onClick={viewMore}>View More</button>\n                            </div>\n                        </div>\n                    </div>                    \n                </div>\n            </div>\n        </div>\n    )\n};\n\nfunction ProductCard( {product}) {\n    const {findCardProduct, updateQuamtity, addNewProduct} = useContext(orderListContext);\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [update, setUpdate] = useState(Math.random());\n \n    const openModal = (productId) => {\n        $(`#product-view-modal-${productId}`).modal(\"show\");\n        setIsOpen(true);\n    }\n\n    const handelModalClose = () => {\n        \n    }\n\n    const addProductIncard = (item) => {\n        findCardProduct(item._id).then(res => {\n            if (res) {\n                updateQuamtity(item._id, res.total + 1);\n            } else {\n                addNewProduct(item);\n            }\n        });\n    }\n\n    return (\n        <Fragment>\n            <div className=\"product-card\">\n                {\n                    !(product.stock - product.totalSell) ? \n                    <div className=\"badge\">Out of Stock</div> : ''\n                }\n                <div className=\"product-tumb\">\n                    {\n                        product?.photos?.length ? <Fragment>\n                            <img src={`http://easyexpress24.com:5000/static/${product?.photos[0]}`} alt=\"\"/>\n                        </Fragment> : <Fragment>\n                            <img src={demoProduct} alt=\"\"/>\n                        </Fragment>\n                    }\n                </div>\n                <div className=\"product-details\">\n                    <span className=\"product-catagory\">Women,bag</span>\n                    <h5><a href=\"\">{product.name}</a></h5>\n                    <div className=\"product-bottom-details\">\n                        <div className=\"product-price\">\n                            {\n                                product.discountPrice ? <Fragment>\n                                    <small>৳{product.sellPrice}</small>\n                                    ৳{ product.sellPrice - product.discountPrice }\n                                </Fragment> : <Fragment>৳{product.sellPrice}</Fragment> \n                            }\n                        </div>\n                        <div className=\"product-links\">\n                            <span className=\"cursor-pointer\" onClick={()=> openModal(product._id)}>\n                                <i className=\"fa fa-eye\"></i>\n                            </span>\n                            <span className=\"cursor-pointer\" onClick={() => addProductIncard(product)}>\n                                <i className=\"fa fa-shopping-cart\"></i>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <ProductModalView\n                productId={product._id} \n                isOpen={isOpen}\n                product={product}\n                update={update}\n                HandelModalClose={handelModalClose}>\n            </ProductModalView>\n        </Fragment>\n        \n    )\n}",["229","230"],"/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/ProductModalView.js",["231","232","233","234","235","236","237","238","239"],"import React, {Fragment, useState, useEffect, useContext} from 'react';\nimport $ from \"jquery\";\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport QuantityInput from \"../Common/QuantityInput\";\nimport 'react-medium-image-zoom/dist/styles.css'\nimport {orderListContext} from \"../../../contexts/OrderListContext\";\n\nimport {\n    Magnifier,\n    GlassMagnifier,\n    SideBySideMagnifier,\n    PictureInPictureMagnifier,\n    MOUSE_ACTIVATION,\n    TOUCH_ACTIVATION\n  } from \"react-image-magnifiers\";\n\nimport Localbase from 'localbase'\nlet db = new Localbase('db');\ndb.config.debug = false;\n\nexport default function ProductModalView(props) {\n    const {findCardProduct, updateQuamtity, addNewProduct} = useContext(orderListContext);\n    const {productId, isOpen, product, HandelModalClose} = props;\n    const [selected, setSelected] = useState(null);\n    const [quan, setQuan] = useState(1);\n \n    useEffect(() => {\n        setSelected(product.photos[0]);\n\n        if (isOpen) {\n            setTimeout(() => {\n                $(`#js-modal-dialog-${productId}`).addClass('modal-lg');\n                $(`#js-image-content-${productId}`).addClass('col-sm-12 col-md-6');\n                $(`#card-content-${productId}`).show();\n            }, 1000)\n        };\n      }, [isOpen]);\n\n    const handelQuantuty = ({qun, productId}) => {\n        setQuan(qun);\n    }\n    const changeProduct = (item) => {\n        setSelected(item);\n    }\n\n    const addToCard = () => {\n        findCardProduct(productId).then(res => {\n            if (res) {\n                updateQuamtity(productId, quan);\n            } else {\n                addNewProduct(product, quan);\n            }\n        });\n    }\n\n    return (\n        <div className=\"modal fade product-preview-modal\" id={`product-view-modal-${productId}`} tabindex=\"-1\" \n                role=\"dialog\" aria-hidden=\"true\">\n            <div id={`js-modal-dialog-${productId}`} className=\"modal-dialog\"> {/* modal-lg*/}\n                <div className=\"modal-content\">\n                    <div className=\"modal-body\">\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n                        <div className=\"row\">\n                            <div id={`js-image-content-${productId}`} className=\"\">\n\n                                <div className=\"selected-image\">\n                                    <GlassMagnifier\n                                        imageSrc={`http://easyexpress24.com:5000/static/${selected}`}\n                                        imageAlt=\"Example\"\n                                        largeImageSrc={`http://easyexpress24.com:5000/static/${selected}`}\n                                        magnifierSize=\"50%\"\n                                    />\n                                </div>\n                                \n                                <div className=\"d-flex\">\n                                    { \n                                        product.photos.map(item => {\n                                            return <div className=\"product-images\" key={item} onClick={() => changeProduct(item)}>\n                                                    <img src={`http://easyexpress24.com:5000/static/${item}`}/>\n                                                </div>\n                                        })\n                                    }\n                                </div>\n                            </div>\n                            <div id={`card-content-${productId}`} className=\"col-sm-12 col-md-6 pt-5\" \n                            style={{display: 'none'}}>\n                            <h2>{product.name}</h2>\n                                 <h5 className=\"gold-text my-4\">\n                                   ৳{ product.sellPrice - product.discountPrice } \n                                 </h5>\n\n                                 <div className=\"form-group d-none\">\n                                     <label for=\"exampleFormControlSelect1\">COLOR</label>\n                                     <select className=\"form-control\" id=\"exampleFormControlSelect1\">\n                                     <option>1</option>\n                                     <option>2</option>\n                                     <option>3</option>\n                                     <option>4</option>\n                                    <option>5</option>\n                                     </select>\n                                 </div>\n\n                                 <div className=\"form-group d-none\">\n                                     <label for=\"exampleFormControlSelect1\">SIZE</label>\n                                     <select className=\"form-control\" id=\"exampleFormControlSelect1\">\n                                     <option>1</option>\n                                     <option>2</option>\n                                     <option>3</option>\n                                     <option>4</option>\n                                     <option>5</option>\n                                    </select>\n                                 </div>\n\n                                 <QuantityInput\n                                     total = {product.total || 1}\n                                     productId={productId}\n                                    handelQuantuty={handelQuantuty} \n                                 ></QuantityInput>\n\n                                 <div>\n                                     <button type=\"button\" className=\"btn light btn-warning w-100 my-5\"\n                                        onClick={() => addToCard()}>ADD To CART</button>\n                                 </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/tushar/Documents/react/e-bazar/src/index.js",["240"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport './assets/fontawesome-free/css/all.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"./assets/css/style.css\";\nimport './assets/scss/main.scss';\n\nimport App from \"./router/App\";\n\nimport Localbase from 'localbase';\nlet db = new Localbase('db')\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,document.getElementById('root')\n);","/home/tushar/Documents/react/e-bazar/src/router/private-router.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/TopNavBar.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Private/common/Navbar.js",["241","242","243"],"import React, {Fragment, useState, useEffect} from 'react';\nimport Cookies from \"js-cookie\";\nimport {Link} from \"react-router-dom\";\n\nimport user from \"../../../assets/images/profile/17.jpg\";\nimport logo1 from \"../../../assets/images/Easyexpress24-final.png\";\n\nimport { LOGIN_USER_INFO } from \"../../../scripts/api\";\nimport { checkRes } from \"../../../scripts/checkRes\";\nimport { getData } from \"../../../scripts/api-service\";\n\nexport default function Navbar() {\n    const [token, isSetToken] = useState();\n    const [userData, setUserData] = useState();\n\n    useEffect(() => {\n        let token = Cookies.get(\"expressToken\");\n        isSetToken(token);\n        \n        if (token) {\n            getUserInfo()\n        }\n    }, []);\n\n    const getUserInfo = async () => {\n        let res = await getData(LOGIN_USER_INFO);\n\n        if (res?.status && checkRes(res.status)) {\n            localStorage.setItem(\"ExpressUserInfo\", JSON.stringify(res.data));\n            setUserData(res.data);\n        }\n    }\n\n    const logout = () => {\n        Cookies.remove('expressToken');\n        localStorage.removeItem(\"ExpressUserInfo\");\n        window.location = '/';\n    }\n\n    return (\n        <Fragment>\n            <div className=\"nav-header custom-nav-header\">\n                <Link to=\"/\" className=\"brand-logo\">\n                    <img className=\"logo-abbr\" src={logo1} alt=\"\"/>\n                </Link>\n\n                <div className=\"nav-control\">\n                    <div className=\"hamburger\">\n                        <span className=\"line\"></span><span className=\"line\"></span><span className=\"line\"></span>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"header custom-header\">\n                <div className=\"header-content\">\n                    <nav className=\"navbar navbar-expand\">\n                        <div className=\"collapse navbar-collapse justify-content-between\">\n                            <div className=\"header-left\">\n                                <div className=\"dashboard_bar\">\n                                    {/* <div className=\"input-group search-area d-lg-inline-flex d-none\">\n                                        <div className=\"input-group-append\">\n                                            <span className=\"input-group-text\"><i className=\"flaticon-381-search-2\"></i></span>\n                                        </div>\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Search here...\"/>\n                                    </div> */}\n                                </div>\n                            </div>\n                            <ul className=\"navbar-nav header-right\">\n                                <li className=\"nav-item dropdown header-profile\">\n                                    <a className=\"nav-link\" href=\"javascript:void(0)\" role=\"button\" data-toggle=\"dropdown\">\n                                        <div className=\"header-info\">\n                                            <span className=\"text-black\">Hello,<strong> {userData?.name}</strong></span>\n                                            <p className=\"fs-12 mb-0\">{userData?.userType}</p>\n                                        </div>\n                                        <img src={ userData?.avatar ? `http://easyexpress24.com:5000/static/${userData.avatar}` : user} \n                                            width=\"20\" alt=\"\"/>\n                                    </a>\n                                    <div className=\"dropdown-menu dropdown-menu-right\">\n                                        {\n                                            userData && userData.userType === \"ADMIN\" ? <Link to=\"/admin/products\" className=\"dropdown-item ai-icon\">\n                                                    <i class=\"fa fa-angellist\" aria-hidden=\"true\"></i>\n                                                    <span className=\"ml-2\">Admin</span>\n                                                </Link> : \"\"\n                                        }\n                                        {\n                                            userData && userData.userType === \"MARCHANT\" ? <Link to=\"/admin/products\" className=\"dropdown-item ai-icon\">\n                                                    <i class=\"fa fa-angellist\" aria-hidden=\"true\"></i>\n                                                    <span className=\"ml-2\">MARCHANT</span>\n                                                </Link> : \"\"\n                                        }\n                                        <Link to=\"/user-profile\" className=\"dropdown-item ai-icon\">\n                                            <svg id=\"icon-user1\" xmlns=\"http://www.w3.org/2000/svg\" className=\"text-primary\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path><circle cx=\"12\" cy=\"7\" r=\"4\"></circle></svg>\n                                            <span className=\"ml-2\">Profile </span>\n                                        </Link>\n                                        <a href=\"#!\" className=\"dropdown-item ai-icon\" onClick={() => {logout()}}>\n                                            <svg id=\"icon-logout\" xmlns=\"http://www.w3.org/2000/svg\" className=\"text-danger\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path><polyline points=\"16 17 21 12 16 7\"></polyline><line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"></line></svg>\n                                            <span className=\"ml-2\">Logout </span>\n                                        </a>\n                                    </div>\n                                </li>\n                            </ul>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/ProductAdd.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Auth/Registration.js",[],"/home/tushar/Documents/react/e-bazar/src/scripts/checkRes.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/ItemType.js",[],"/home/tushar/Documents/react/e-bazar/src/layouts/Auth.js",[],"/home/tushar/Documents/react/e-bazar/src/layouts/Public.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/Footer.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/BundlesPackagesOffer.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/index.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Auth/ForgetPassword.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/Orders.js",["244","245","246","247"],"/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/Brand.js",["248","249"],"import React, {Fragment, useState, useEffect} from 'react';\nimport {Link} from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport $ from \"jquery\";\nimport { useParams } from 'react-router-dom';\n\nimport { postData, getData, putData } from \"../../../scripts/api-service\";\nimport { CREATE_CATEGORY_BRAND, GET_CATEGORY_LIST, GET_CATEGORY_BRAND, UPDATE_BRAND } from \"../../../scripts/api\";\nimport { dateFormat } from \"../../../scripts/helper\";\nimport Pagination from \"../common/Pagination\";\n\nexport default function Brand() {\n    const [categorie, setCategories] = useState([]);\n    const [brands, setBarnds] = useState([]);\n    const [brandName, setBrandName] = useState();\n    const { categoryId } = useParams();\n    const [updateBrand, setUpdateBrand] = useState();\n    const [updateBrandName, setUpdateBrandName] = useState()\n\n    useEffect(() => {\n        if (categoryId) {\n            getCategorie();\n            getCategoryBrand();\n        }\n    }, []);\n\n    const getCategorie = async () => {\n        let res = await getData(GET_CATEGORY_LIST+ '?_id=' + categoryId);\n\n        if (res?.data?.isSuccess) {\n            setCategories(res?.data?.data[0]);\n        } else {\n            toast(\"Something went wrong\");\n        }\n    };\n\n    const getCategoryBrand = async (page) => {\n        // let res = await getData(GET_CATEGORY_BRAND + '?category=' + categoryId);\n\n        let query = page ? GET_CATEGORY_BRAND + '?category=' + categoryId + '&page='+ page : GET_CATEGORY_BRAND + '?category=' + categoryId;\n        let res = await getData(query);\n\n\n        if (res?.data?.isSuccess) {\n            setBarnds(res.data.data);\n        } else {\n            toast(\"Something went wrong\");\n        }\n    }\n\n    const changeHandeler = (e) => {\n        let value = e.target.value;\n        setBrandName(value);\n    }\n\n    const addBrand = async (e) => {\n        if (brandName && categoryId) {\n            let body = {\n                name: brandName,\n                category: categoryId\n            };\n\n\n            let res = await postData(CREATE_CATEGORY_BRAND, body);\n\n            if (res?.data?.isSuccess) {\n                toast.success(\"Brand Add successfully\");\n                $(\"#create-featured-modal\").modal('hide');\n                setBrandName(\"\");\n                getCategoryBrand();\n            } else {\n                toast.error(\"Something went wrong\");\n            }\n        } else {\n            toast(\"Something went wrong\");\n        }\n    }\n\n    const updateBrandContent = (data) => {\n        setUpdateBrand(data);\n        setUpdateBrandName(data.name);\n        $(\"#update-featured-modal\").modal('show');\n    }\n\n    const changeHandelerUpdate = (e) => {\n        setUpdateBrandName(e.target.value);\n    }\n\n    const editBrand = async () => {\n        if (updateBrandName) {\n            let res = await putData(UPDATE_BRAND, \n                {name: updateBrandName,\n                _id: updateBrand._id,\n                category: updateBrand.category\n            });\n\n            if (res?.data?.isSuccess) {\n                toast(\"Brand Update Successfully\");\n                $(\"#update-featured-modal\").modal('hide');\n                setUpdateBrand();\n                setUpdateBrandName();\n\n                getCategoryBrand();\n            } else {\n                toast(\"Something went wrong\");\n            }\n        } else {\n            toast(\"Category name is required\");\n        }\n    }\n\n    const handelPagination = (page) => {\n        getCategoryBrand(page);\n    }\n\n\n\n    return (\n        <Fragment>\n        <div className=\"brand\">\n            <div className=\"row\">\n            <div className=\"col-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h4 className=\"card-title\">Category <span className=\"text-info\">{categorie.name}</span> Brands</h4>\n                            <button type=\"button\" className=\"btn light btn-success\" data-toggle=\"modal\" data-target=\"#create-featured-modal\">\n                                <i className=\"fa fa-plus mr-2\"></i> Add Brand\n                            </button>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"table-responsive\">\n                                {\n                                    brands?.length ? <table className=\"table table-responsive-md\">\n                                        <thead>\n                                            <tr>\n                                                <th><strong>NAME</strong></th>\n                                                <th><strong>Date</strong></th>\n                                                <th><strong>Status</strong></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                brands.map((brand) => {\n                                                    return (\n                                                    <tr key={brand._id}>\n                                                        <td>{brand.name}</td>\n                                                        <td>{dateFormat(brand.creatingDate)}</td>\n                                                        <td>{brand.status ? 'Active' : \"Inactive\"}</td>\n                                                        <td>\n                                                            <div className=\"d-flex\">\n                                                                <Link to={`/admin/sub-category/${brand.category}/${brand._id}`} className=\"btn btn-dark shadow btn-xs sharp mr-1\"><i className=\"fa fa-eye\"></i></Link>\n                                                                <a onClick={() => updateBrandContent(brand)} className=\"btn btn-primary shadow btn-xs sharp mr-1\"><i className=\"fa fa-pencil\"></i></a>\n                                                                {/* <a href=\"#\" className=\"btn btn-danger shadow btn-xs sharp\"><i className=\"fa fa-trash\"></i></a> */}\n                                                            </div>\n                                                        </td>\n                                                    </tr>)\n                                                })\n                                            }\n                                        </tbody>\n                                    </table> : <h3>No Data found</h3>\n                                }\n                                \n                            </div>\n\n                            <Pagination\n                                    handelPagination={handelPagination}\n                            ></Pagination>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"create-featured-modal\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Add Brand from {categorie.name}</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\"><span>&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className=\"form-group\">\n                            <label>Brand Name</label>\n                            <input type=\"text\" onChange={changeHandeler} value={brandName}\n                                name=\"brandName\" className=\"form-control\"/>\n                        </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-danger light\" data-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={() => addBrand()}>Save</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"update-featured-modal\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Update Brand from {categorie.name}</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\"><span>&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className=\"form-group\">\n                            <label>Brand Name</label>\n                            <input type=\"text\" onChange={changeHandelerUpdate} value={updateBrandName}\n                                name=\"brandName\" className=\"form-control\"/>\n                        </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-danger light\" data-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={() => editBrand()}>Update</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </Fragment>\n    )\n}\n","/home/tushar/Documents/react/e-bazar/src/pages/Private/common/Pagination.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/NonBrandItems.js",["250"],"import React, {useEffect, useState, Fragment} from 'react';\nimport { Link } from \"react-router-dom\";\nimport { getData } from \"../../../scripts/api-service\";\nimport { GET_CATEGORY_LIST } from \"../../../scripts/api\";\nimport Localbase from 'localbase';\nlet db = new Localbase('db');\n\nexport default function NonBrandItems(props) {\n    const [categories, setCategory] = useState([]);\n\n    useEffect(() => {\n        getNonBrandCategory()\n    }, []);\n\n    const getNonBrandCategory = async () => {\n        let res = await getData(GET_CATEGORY_LIST+ '?isUnbrandCategory=true&limit=10000');\n\n        if (res?.data?.isSuccess) {\n            setCategory(res?.data?.data);\n        }\n    };\n\n    return (\n        <Fragment>\n            {\n                categories.length ? <div className=\"non-Brand-items card\">\n                    <div className=\"card-body\">\n                        <div className=\"row\">\n                            {   \n                                categories.map(category => {\n                                    return <div className=\"col-12 col-sm-6 col-md-6 col-lg-6 col-xl-3\" key={category._id}>\n                                        <div className=\"nonbrand-product\">\n                                            <Link to={`/products?category=${category._id}`}>\n                                                {category.name}\n                                            </Link>\n                                        </div>\n                                    </div>\n                                })\n                            }\n                        </div>\n                    </div>\n                </div> : ''\n            }\n        </Fragment>\n        \n        \n    )\n}\n","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/ProductEdit.js",["251","252","253","254","255","256","257","258","259","260","261","262","263","264"],"import React, { Component, Fragment } from 'react';\nimport { putData, postData, getData } from \"../../../scripts/api-service\";\nimport { GET_RPODUCT, \n        GET_CATEGORY_LIST, \n        GET_CATEGORY_BRAND, \n        GET_CATEGORY_BRAND_SUB_CATEGORY,\n        UPDATE_PRODUCT,\n        UPLOAD_RPODUCT_IMAGE,\n        REMOVE_PRODUCT_PHOTO } from \"../../../scripts/api\";\n\nimport { toast } from 'react-toastify';\nimport demoProduct from \"../../../assets/images/demo-product.png\";\n\nexport default class ProductEdit extends Component {\n    formData = {\n        \"name\": \"\",\n        \"regularPrice\": 0,\n        \"sellPrice\": 0,\n        \"stock\": 0,\n        \"sku\": 0,\n        \"category\": \"\",\n        \"categoryBrand\": \"\",\n        \"categoryBrandSubCategory\": \"\",\n        \"discountPrice\": 0,\n        \"isFlushSell\": false,\n        \"isSlideProduct\": false,\n        \"isBundleProduct\": false,\n        \"productDetails\": \"\"\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            productId: props?.match?.params?.productId,\n            productInfo: null,\n            categoryList: [],\n            brandList: [],\n            subCategoryList: [],\n            formData: this.formDatam,\n            productImages: []\n        };\n    }\n\n    componentDidMount() {\n        this.getProductInfo();\n        this.getCategoryList();\n    }\n\n    getCategoryList = async () => {\n        let res = await getData(GET_CATEGORY_LIST + \"?limit=1000\");\n\n        if (res?.data?.isSuccess) {\n            this.setState({categoryList: res?.data?.data});\n        }\n    }\n\n    selectCategory = (e) => {\n        this.setState({selectedCategory: e.target.value});\n        this.getBrandList(e.target.value);\n    };\n\n    getBrandList = async (categoryId) => {\n        let res = await getData(GET_CATEGORY_BRAND + '?category=' + categoryId + \"&limit=1000\");\n\n        if (res?.data?.isSuccess) {\n            this.setState({brandList: res.data.data});\n        }\n    }\n\n    selectBrand = (e) => {\n        this.setState({selectedBrand: e.target.value});\n        this.getSubCategoryList(e.target.value);\n    }\n\n    getSubCategoryList = async (brandId) => {\n        let res = await getData(GET_CATEGORY_BRAND_SUB_CATEGORY + '?categoryBrand=' + brandId + \"&limit=1000\");\n\n        if (res?.data?.isSuccess) {\n            this.setState({subCategoryList: res?.data?.data})\n        }\n    }\n\n    selectSubCategory = (e) => {\n        this.setState({selectedSubCategory: e.target.value});\n    }\n\n    getProductInfo = async () => {\n        let url = GET_RPODUCT + '?_id='+ this.state.productId ;\n        let res = await getData(url);\n\n        if (res?.data?.isSuccess) {\n            let masterData = res?.data?.data[0]\n            this.setState({productInfo: masterData});\n\n            console.log(\"masterData\", masterData);\n\n            this.setState({\n                formData: {\n                  ...this.state.formData,\n                  [\"name\"]: masterData.name,\n                  [\"regularPrice\"]: masterData.regularPrice,\n                  [\"sellPrice\"]: masterData.sellPrice,\n                  [\"stock\"]: masterData.stock,\n                  [\"sku\"]: masterData.sku,\n                  [\"category\"]: masterData.category,\n                  [\"categoryBrand\"]: masterData.categoryBrand,\n                  [\"categoryBrandSubCategory\"]: masterData.categoryBrandSubCategory,\n                  [\"discountPrice\"]: masterData.discountPrice,\n                  [\"isFlushSell\"]: masterData.isFlushSell,\n                  [\"isSlideProduct\"]: masterData.isSlideProduct,\n                  [\"isBundleProduct\"]: masterData.isBundleProduct,\n                  [\"productDetails\"]: masterData.productDetails,\n                },\n            });\n\n            this.setState({productImages: masterData.photos});\n        }\n    } \n\n    changeHandeler = (e) => {\n        this.setState({\n            formData: {\n                ...this.state.formData,\n                [e.target.name]: e.target.value,\n            },\n        });\n    }\n\n    updateProduct = async () => {\n        let data = this.state.formData;\n        data._id = this.state.productId;\n\n        let res = await putData(UPDATE_PRODUCT, data);\n\n        console.log(\"res\", res);\n\n        if (res.data.isSuccess) {\n            toast.success('Product update successfully')\n        } else {\n            toast.error(res.msg);\n        }\n    };\n\n    selectImage = async (e) => {\n        let instance = this;\n        let element = e.target;\n        var file = element.files[0];\n\n        let data = new FormData();\n        data.append(\"_id\", this.state.productId);\n        data.append('photos', file);\n\n        let res = await postData(UPLOAD_RPODUCT_IMAGE, data);\n\n        if (res?.data?.isSuccess) {\n            toast.success(\"Product Image Upload Successfully\");\n            this.getProductInfo();\n        }\n    }\n\n    removeImage = async (photoId, index) => {\n        let photo = this.state.productImages.filter(e => e !== photoId);\n        let data = {\n            _id: this.state.productId,\n            photos: photo\n        }\n\n        let res = await postData(REMOVE_PRODUCT_PHOTO, data);\n\n        if (res?.data?.isSuccess) {\n            toast.success(\"Product Image Remove Successfully\");\n            this.getProductInfo();\n        } else if (res.msg) {\n            toast.error(res.msg);   \n        }\n    } \n\n\n    render() {\n        const baseurl = \"http://easyexpress24.com:5000/static/\";\n        \n        return (\n            <div className=\"add-product\">\n                <h3>Add Products</h3>\n\n                <div className=\"card mt-3\">\n                    <div className=\"card-body\">\n                        <div className=\"row\">\n                            <Fragment>\n                                <div className=\"form-group col-12\">\n                                    <label>Product Name</label>\n                                    <input type=\"text\" className=\"form-control\" value={this.state?.formData?.name}\n                                        name=\"name\" onChange={this.changeHandeler}/>\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <label>Regular Price</label>\n                                    <input type=\"text\" className=\"form-control\" value={this.state?.formData?.regularPrice}\n                                        name=\"regularPrice\" onChange={this.changeHandeler} />\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <label>Sell Price</label>\n                                    <input type=\"text\" className=\"form-control\" value={this.state?.formData?.sellPrice}\n                                        name=\"sellPrice\" onChange={this.changeHandeler}/>\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <label>Stock</label>\n                                    <input type=\"text\" className=\"form-control\" value={this.state?.formData?.stock}\n                                        name=\"stock\" onChange={this.changeHandeler} />\n                                </div>\n                                \n                                <div className=\"form-group col-6\">\n                                    <label>SKU (Stock keeping unit)</label>\n                                    <input type=\"text\" className=\"form-control\" value={this.state?.formData?.sku}\n                                        name=\"sku\" onChange={this.changeHandeler}/>\n                                </div>\n                                \n                                <div className=\"form-group col-6\">\n                                    <label>Discount Price</label>\n                                    <input type=\"text\" className=\"form-control\" value={this.state?.formData?.discountPrice}\n                                        name=\"discountPrice\" onChange={this.changeHandeler}/>\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <label>Category</label>\n                                    <select class=\"custom-select\" name=\"category\" value={this.state?.formData?.category} onChange={this.selectCategory}>\n                                        <option value=\"\">Select Category</option>\n                                        {\n                                            this.state.categoryList?.length ? (\n                                                this.state.categoryList.map(item => {\n                                                    return <Fragment key={item._id}>\n                                                            <option value={item._id}>{item.name}</option>\n                                                        </Fragment>\n                                                })\n                                            ) : \"No Data Found\"\n                                        }\n                                        \n                                    </select>\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <label>Brand</label>\n                                    <select class=\"custom-select\" name=\"categoryBrand\" \n                                        value={this.state.formData?.categoryBrand} onChange={this.selectBrand}>\n                                        <option value=\"\">Select Brand</option>\n                                        {\n                                            this.state.brandList?.length ? (\n                                                this.state.brandList.map(item => {\n                                                    return <Fragment key={item._id}>\n                                                            <option value={item._id}>{item.name}</option>\n                                                        </Fragment>\n                                                })\n                                            ) : \"No Data Found\"\n                                        }\n                                    </select>\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <label>Sub-Category</label>\n                                    <select class=\"custom-select\" value={this.state.formData?.categoryBrandSubCategory} \n                                        name=\"categoryBrandSubCategory\" onChange={this.selectSubCategory}>\n                                        <option value=\"\">Select Sub-Category</option>\n                                        {\n                                            this.state.subCategoryList?.length ? (\n                                                this.state.subCategoryList.map(item => {\n                                                    return <Fragment key={item._id}>\n                                                            <option value={item._id}>{item.name}</option>\n                                                        </Fragment>\n                                                })\n                                            ) : \"No Data Found\"\n                                        }\n                                    </select>\n                                </div>\n                                \n                                <div className=\"form-group col-6\">\n                                    <label>Slider</label>\n                                    <select class=\"custom-select\" value={this.state.formData?.isSlideProduct}\n                                        name=\"isSlideProduct\" onChange={this.changeHandeler}>\n                                        <option value=\"false\">NO</option>\n                                        <option value=\"true\">Yes</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group col-6\">\n                                    <label>Flash Sall</label>\n                                    <select class=\"custom-select\" value={this.state.formData?.isFlushSell}\n                                        name=\"isFlushSell\" onChange={this.changeHandeler}>\n                                        <option value=\"false\">NO</option>\n                                        <option value=\"true\">Yes</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group col-6\">\n                                    <label>Bundle Offer</label>\n                                    <select class=\"custom-select\" value={this.state.formData?.isBundleProduct}\n                                        name=\"isBundleProduct\" onChange={this.changeHandeler}>\n                                        <option value=\"false\">NO</option>\n                                        <option value=\"true\">Yes</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group col-6\">\n                                    <label>Product Details</label>\n                                    <input type=\"text\" className=\"form-control\" value={this.state.formData?.productDetails}\n                                        name=\"productDetails\" onChange={this.changeHandeler}/>\n                                </div>\n\n                                <div className=\"form-group col-12 text-right\">\n                                    <button type=\"button\" className=\"btn btn-square btn-outline-primary\"  \n                                        onClick={this.updateProduct}>Update Product Info</button>\n                                </div>\n                            </Fragment>\n                        </div>\n\n                        <hr/>\n\n                        <div className=\"product-images\">\n                            <div className=\"row\">\n                                {/* img 1 */}\n                                <div className=\"form-group col-6\">\n                                    <label>Image</label>\n                                    {\n                                        !this.state?.productImages[0] ? <input type=\"file\" id=\"js-product-img-0\" data-content=\"1\" className=\"form-control\" \n                                            onChange={this.selectImage} accept=\"image/x-png, image/gif, image/jpeg\" /> : ''\n                                    }\n                                </div>\n\n                                <div className=\"col-6\">\n                                    <img className=\"img-thumbnail\" id=\"js-product-img-view-1\" \n                                        src={this.state?.productImages[0] ? baseurl+this.state?.productImages[0] : demoProduct}\n                                        height=\"200\" width=\"200\"  alt=\"\" />\n                                    {\n                                        this.state?.productImages[0] ? <button type=\"button\" className=\"btn btn-danger ml-3\" \n                                            onClick={() => this.removeImage(this.state.productImages[0], 0)}>Remove Image</button> : \"\"\n                                    }\n                                </div>\n                            </div>\n\n                            <hr/>\n                            \n                            <div className=\"row\">\n                                {/* img 2 */}\n                                <div className=\"form-group col-6\">\n                                    <label>Image</label>\n                                    {\n                                        !this.state?.productImages[1] ? <input type=\"file\" id=\"js-product-img-1\" data-content=\"1\" className=\"form-control\" \n                                            onChange={this.selectImage} accept=\"image/x-png, image/gif, image/jpeg\" /> : ''\n                                    }\n                                </div>\n\n                                <div className=\"col-6\">\n                                    <img className=\"img-thumbnail\" id=\"js-product-img-view-1\" \n                                    src={this.state?.productImages[1] ? baseurl+this.state?.productImages[1] : demoProduct}\n                                    height=\"200\" width=\"200\" alt=\"\" />\n                                    {\n                                        this.state?.productImages[1] ? <button type=\"button\" className=\"btn btn-danger ml-3\" \n                                            onClick={() => this.removeImage(this.state.productImages[1], 1)}>Remove Image</button> : \"\"\n                                    }\n                                </div>\n                            </div>\n\n                            <hr/>\n\n                            <div className=\"row\">\n                                {/* img 3  */}\n                                <div className=\"form-group col-6\">\n                                    <label>Image</label>\n                                    {\n                                        !this.state?.productImages[2] ? <input type=\"file\" id=\"js-product-img-2\" data-content=\"1\" className=\"form-control\" \n                                            onChange={this.selectImage} accept=\"image/x-png, image/gif, image/jpeg\" /> : ''\n                                    }\n                                </div>\n\n                                <div className=\"col-6\">\n                                    <img className=\"img-thumbnail\" id=\"js-product-img-view-1\" \n                                    height=\"200\" width=\"200\" alt=\"\" \n                                    src={this.state?.productImages[2] ? baseurl+this.state?.productImages[2] : demoProduct}/>\n                                    {\n                                        this.state?.productImages[2] ? <button type=\"button\" className=\"btn btn-danger ml-3\" \n                                            onClick={() => this.removeImage(this.state.productImages[2], 2)}>Remove Image</button> : \"\"\n                                    }\n                                </div>\n                            </div>\n\n                            <hr/>\n\n                            <div className=\"row\">\n                                {/* img 4 */}\n                                <div className=\"form-group col-6\">\n                                    <label>Image</label>\n                                    {\n                                        !this.state?.productImages[3] ? <input type=\"file\" id=\"js-product-img-3\" data-content=\"1\" className=\"form-control\" \n                                            onChange={this.selectImage} accept=\"image/x-png, image/gif, image/jpeg\" /> : ''\n                                    }\n                                </div>\n\n                                <div className=\"col-6\">\n                                    <img className=\"img-thumbnail\" id=\"js-product-img-view-1\" \n                                        height=\"200\" width=\"200\" alt=\"\"\n                                        src={this.state?.productImages[3] ? baseurl+this.state?.productImages[3] : demoProduct} />\n                                    {\n                                        this.state?.productImages[3] ? <button type=\"button\" className=\"btn btn-danger ml-3\" \n                                            onClick={() => this.removeImage(this.state.productImages[3], 3)}>Remove Image</button> : \"\"\n                                    }\n                                </div>\n                            </div>\n\n                            <hr/>\n\n                            <div className=\"row\">\n                                {/* img 5  */}\n                                <div className=\"form-group col-6\">\n                                    <label>Image</label>\n                                    {\n                                        !this.state?.productImages[4] ? <input type=\"file\" id=\"js-product-img-4\" data-content=\"4\" className=\"form-control\" \n                                            onChange={this.selectImage} accept=\"image/x-png, image/gif, image/jpeg\" /> : ''\n                                    }\n                                </div>\n\n                                <div className=\"col-6\">\n                                    <img className=\"img-thumbnail\" id=\"js-product-img-view-1\" \n                                        height=\"200\" width=\"200\" alt=\"\" \n                                        src={this.state?.productImages[4] ? baseurl+this.state?.productImages[4] : demoProduct}/>\n                                    {\n                                        this.state?.productImages[4] ? <button type=\"button\" className=\"btn btn-danger ml-3\" \n                                            onClick={() => this.removeImage(this.state.productImages[4], 4)}>Remove Image</button> : \"\"\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","/home/tushar/Documents/react/e-bazar/src/scripts/api.js",[],"/home/tushar/Documents/react/e-bazar/src/router/auth-route.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/QuantityInput.js",["265","266"],"import React, {useState} from 'react'\n\nexport default function QuantityInput(props) {\n    const {total, productId, handelQuantuty} = props;\n\n    const [value, setValue] = useState(total);\n    const [minValue, setMinValue] = useState(0);\n    const [maxValue, setMaxValue] = useState(10);\n\n    const decriesValue = () => {\n        if (value > minValue) {\n            setValue(value -1);\n            handelQuantuty({qun: value - 1, productId: productId});\n        }\n    }\n\n    const incriseValue = () => {\n        if (value < maxValue) {\n            setValue(value + 1);\n            handelQuantuty({qun: value + 1, productId: productId});\n        }\n    }\n\n    return (\n        <div className=\"qty-input\">\n            <button className=\"qty-count qty-count--minus\" data-action=\"minus\" type=\"button\" onClick={decriesValue}\n                disabled={minValue >= value ? 1 : 0 }>-</button>\n            <input className=\"product-qty\" type=\"number\" name=\"product-qty\" \n                min={minValue} max={maxValue} value={value}/>\n            <button className=\"qty-count qty-count--add\" data-action=\"add\" onClick={incriseValue} type=\"button\"\n                disabled={maxValue <= value ? 1 : 0 }>+</button>\n        </div>\n    )\n}\n","/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/TopSlider.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Private/common/Sidebar.js",["267"],"import { localeData } from 'moment';\nimport React, {Fragment, useState, useEffect} from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport default function Sidebar() {\n    const [userData, setUserData] = useState();\n    const className = (location, path) => {\n        let className = \"menu-list\";\n        if (location === path) className = \"menu-list mm-active\";\n        return className;\n    };\n\n    useEffect(() => {\n        let user = JSON.parse(localStorage.getItem(\"ExpressUserInfo\"));\n        setUserData(user);\n    }, []);\n\n    return (\n        <div className=\"deznav left-sidebar\">\n            <div className=\"deznav-scroll mm-active ps ps--active-y\">\n                <ul className=\"metismenu mm-show\" id=\"menu\">\n                    <li className={className(window.location.pathname, \"/admin/orders\")}>\n                        <Link className=\"ai-icon menu-list-header\"\n                            to=\"/admin/orders\" aria-expanded=\"false\">\n                            <i className=\"fa fa-first-order\"></i>\n                            <span className=\"nav-text\">Orders</span>\n                        </Link>\n                    </li>\n                    <li className={className(window.location.pathname, \"/admin/products\")}>\n                        <Link className=\"ai-icon menu-list-header\" \n                            to='/admin/products' aria-expanded=\"false\">\n                            <i className=\"fa fa-archive\"></i>\n                            <span className=\"nav-text\">Products</span>\n                        </Link>\n                    </li>\n                    {\n                        userData && userData.userType === \"ADMIN\" ? <Fragment>\n                            <li className={className(window.location.pathname, \"/admin/users\")}>\n                                <Link className=\"ai-icon menu-list-header\" \n                                    to=\"/admin/users\" aria-expanded=\"false\">\n                                    <i className=\"fa fa-users\"></i>\n                                    <span className=\"nav-text\">Users</span>\n                                </Link>\n                            </li>\n                            <li className={className(window.location.pathname, \"/admin/category\")}>\n                                <Link className=\"ai-icon menu-list-header\" \n                                    to=\"/admin/category\" aria-expanded=\"false\">\n                                    <i className=\"flaticon-381-television\"></i>\n                                    <span className=\"nav-text\">Category</span>\n                                </Link>\n                            </li>\n                        </Fragment> : ''\n                    }\n                    \n                </ul>\n            </div>\n        </div>\n    )\n}\n",["268","269"],"/home/tushar/Documents/react/e-bazar/src/pages/Public/Product-List.js",["270","271","272"],"import React, {Fragment, useEffect, useState, useContext} from 'react';\nimport $ from \"jquery\";\nimport {Link,useHistory} from \"react-router-dom\";\nimport { getData } from \"../../scripts/api-service\";\nimport { GET_RPODUCT } from \"../../scripts/api\";\nimport demoProduct from \"../../assets/images/demo-product.png\";\nimport ProductModalView from \"../Components/Common/ProductModalView\";\nimport Pagination from \"../Private/common/Pagination\";\nimport {orderListContext} from \"../../contexts/OrderListContext\";\n\nexport default function ProductList(props) {\n    const {location} = props;\n    const {search} = location;\n    const [products, setProducts] = useState([]);\n    const history = useHistory();\n    \n    \n    useEffect(() => {\n        getProducts(search)\n    }, [search]);\n\n    const getProducts = async (query) => {\n        let url = query ? GET_RPODUCT + query : GET_RPODUCT;\n        let res = await getData(url);\n\n        if (res?.data?.isSuccess) {\n            setProducts(res?.data?.data);\n        }\n    }\n\n    const handelPagination = (page) => {\n        let {location} = history,\n            {search} = location;\n\n        let query = search ? search + `&page=${page}` : `?page=${page}`;\n        getProducts(query);\n    }\n\n    return (\n        <div className=\"home-landing\">\n            <div className=\"non-Brand-items card\">\n                <div className=\"card-body\">\n                    <div className=\"row\">\n                        {   \n                            products.length ? \n                            products.map(product => {\n                                return <div className=\"col-12 col-sm-6 col-md-6 col-lg-6 col-xl-3\" key={product._id}>\n                                        <ProductCard product={product}></ProductCard>\n                                    </div>\n                            }) : <h3>No Product Found</h3>\n                        }\n                    </div>\n                    <Pagination\n                        handelPagination={handelPagination}\n                    ></Pagination>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction ProductCard( {product}) {\n    const {findCardProduct, updateQuamtity, addNewProduct} = useContext(orderListContext);\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [update, setUpdate] = useState(Math.random());\n \n    const openModal = (productId) => {\n        $(`#product-view-modal-${productId}`).modal(\"show\");\n        setIsOpen(true);\n    }\n\n    const handelModalClose = () => {\n        \n    }\n\n    const addProductIncard = (item) => {\n        findCardProduct(item._id).then(res => {\n            if (res) {\n                updateQuamtity(item._id, res.total + 1);\n            } else {\n                addNewProduct(item);\n            }\n        });\n    }\n\n    return (\n        <Fragment>\n            <div className=\"product-card\">\n                {\n                    !(product.stock - product.totalSell) ? \n                    <div className=\"badge\">Out of Stock</div> : ''\n                }\n                <div className=\"product-tumb\">\n                    {\n                        product?.photos?.length ? <Fragment>\n                            <img src={`http://easyexpress24.com:5000/static/${product?.photos[0]}`} alt=\"\"/>\n                        </Fragment> : <Fragment>\n                            <img src={demoProduct} alt=\"\"/>\n                        </Fragment>\n                    }\n                </div>\n                <div className=\"product-details\">\n                    <span className=\"product-catagory\">Women,bag</span>\n                    <h5><a href=\"\">{product.name}</a></h5>\n                    <div className=\"product-bottom-details\">\n                        <div className=\"product-price\">\n                            {\n                                product.discountPrice ? <Fragment>\n                                    <small>৳{product.sellPrice}</small>\n                                    ৳{ product.sellPrice - product.discountPrice }\n                                </Fragment> : <Fragment>৳{product.sellPrice}</Fragment> \n                            }\n                        </div>\n                        <div className=\"product-links\">\n                            <span className=\"cursor-pointer\" onClick={()=> openModal(product._id)}>\n                                <i className=\"fa fa-eye\"></i>\n                            </span>\n                            <span className=\"cursor-pointer\" onClick={() => addProductIncard(product)}>\n                                <i className=\"fa fa-shopping-cart\"></i>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <ProductModalView\n                productId={product._id} \n                isOpen={isOpen}\n                product={product}\n                update={update}\n                HandelModalClose={handelModalClose}>\n            </ProductModalView>\n        </Fragment>\n        \n    )\n}\n","/home/tushar/Documents/react/e-bazar/src/pages/Auth/SignIn.js",["273"],"import React, { Component,Fragment } from 'react';\nimport Cookies from \"js-cookie\";\nimport { toast } from 'react-toastify';\n\nimport { LOGIN } from \"../../scripts/api\";\nimport { checkRes } from \"../../scripts/checkRes\";\nimport { postData } from \"../../scripts/api-service\";\n\nexport default class SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            error: \"\"\n        };\n    }\n\n    changeHandeler = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n\n        this.setState({ [nam]: val });\n        this.setState({ error: \"\" });\n    }\n\n    loginSubmit = async (e) => {\n        e.preventDefault();\n\n        const {email, password} = this.state;\n\n        if (email && password) {\n\n            let signIn = {\n                email: email.trim(),\n                password: password\n            }\n\n            let res = await postData(LOGIN, signIn, \"no_token\");\n\n            if (res?.status && checkRes(res.status) && res.data.isSuccess) {\n                Cookies.set(\"expressToken\", res.data.data);\n                window.location = \"/\";\n\n            } else if(!res.data.isSuccess) {\n                this.setState({ error: res.data.msg });\n            }\n        } else if (!email) {\n            this.setState({error: \"Email is required\"})\n        } else if (!password) {\n            this.setState({error: \"Password is required\"})\n        }\n\n        if (this.state.error) {\n            toast(this.state.error);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"register-content\">\n                <div className=\"sign-heading\">\n                    <h2>Login</h2>\n                    <p>Use credentials to access your account.</p>\n                </div>\n                <form className=\"form\" onSubmit={this.loginSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlInput1\">Email address</label>\n                        <input type=\"email\" className=\"form-control\" name=\"email\"\n                            onChange={this.changeHandeler}  placeholder=\"name@example.com\"/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputPassword1\">Password</label>\n                        <input type=\"password\" className=\"form-control\" name=\"password\" \n                            onChange={this.changeHandeler} placeholder=\"Password\"/>\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-outline-success\">SIGN IN NOW</button>\n                </form>\n\n                <div className=\"form-bottom\">\n                    <p>Don't have an account? click on the <span onClick={() => this.props.handelSetShowPage(\"signup\")}>( sign up )</span> button above.</p>\n                </div>\n            </div>\n        )\n    }\n}\n","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/SubCategory.js",["274","275"],"import React, {Fragment, useState, useEffect} from 'react'\nimport { toast } from 'react-toastify';\nimport $ from \"jquery\";\nimport { useParams } from 'react-router-dom';\n\nimport { postData, getData, putData } from \"../../../scripts/api-service\";\nimport { GET_CATEGORY_BRAND, GET_CATEGORY_BRAND_SUB_CATEGORY, CREATE_SUB_CATEGORY, UPDATE_SUBCATEGORY } from \"../../../scripts/api\";\nimport { dateFormat } from \"../../../scripts/helper\";\nimport Pagination from \"../common/Pagination\";\n\nexport default function SubCategory() {\n    const [brandInfo, setBrandInfo] = useState();\n    const [subName, getSubName] = useState(\"\");\n    const [brandSubCategory, getBrandSubCategory] = useState();\n    const { categoryId, brandId } = useParams();\n    const [subCategoryUpadet, setsubCategoryUpadet] = useState();\n    const [subCategoryUpadetName, setsubCategoryUpadetName] = useState();\n\n    useEffect(() => {\n        if (brandId) {\n            getBrandInfo();\n            getSubBrandCategory()\n        }\n    }, []);\n\n    const getBrandInfo = async () => {\n        let res = await getData(GET_CATEGORY_BRAND+ '?_id=' + brandId);\n\n        if (res?.data?.isSuccess) {\n            setBrandInfo(res?.data?.data[0]);\n        } else {\n            toast(\"Something went wrong\");\n        }\n    }\n\n    const getSubBrandCategory = async (page) => {\n        // let res = await getData(GET_CATEGORY_BRAND_SUB_CATEGORY+ '?categoryBrand=' + brandId);\n        let query = page ? GET_CATEGORY_BRAND_SUB_CATEGORY+ '?categoryBrand=' + brandId + '&page='+ page : GET_CATEGORY_BRAND_SUB_CATEGORY+ '?categoryBrand=' + brandId;\n        let res = await getData(query);\n\n        if (res?.data?.isSuccess) {\n            getBrandSubCategory(res?.data?.data);\n        } else {\n            toast(\"Something went wrong\");\n        }\n    }\n\n    const saveSubCategory = async (e) => {\n        if (subName && categoryId && brandId) {\n            let body = {\n                name: subName,\n                category: categoryId,\n                categoryBrand: brandId\n            };\n\n            let res = await postData(CREATE_SUB_CATEGORY, body);\n\n            if (res?.data?.isSuccess) {\n                toast.success(\"Brand Add successfully\");\n                $(\"#create-product-modal\").modal('hide');\n                getSubName(\"\");\n                getSubBrandCategory();\n            } else {\n                toast.error(\"Something went wrong\");\n            }\n        } else {\n            toast.error(\"Something went wrong\");\n        }\n    } \n\n    const changeHandeler = (e) => {\n        let value = e.target.value;\n        getSubName(value);\n    }\n\n    const updateSubcategory = (data) => {\n        setsubCategoryUpadet(data);\n        setsubCategoryUpadetName(data.name);\n        $(\"#update-product-modal\").modal('show');\n    }\n\n    const editSubCategory = async () => {\n        if (subCategoryUpadetName) {\n            let res = await putData(UPDATE_SUBCATEGORY, \n                {\n                    \"_id\": subCategoryUpadet._id,\n                    \"name\": subCategoryUpadetName,\n                    \"category\": subCategoryUpadet.category,\n                    \"categoryBrand\": subCategoryUpadet.categoryBrand\n            });\n\n            if (res?.data?.isSuccess) {\n                toast(\"Sub-category Update Successfully\");\n                $(\"#update-product-modal\").modal('hide');\n                setsubCategoryUpadet();\n                setsubCategoryUpadetName();\n\n                getSubBrandCategory();\n            } else {\n                toast(\"Something went wrong\");\n            }\n        } else {\n            toast(\"Name is required\");\n        }\n    };\n\n    const handelPagination = (page) => {\n        getSubBrandCategory(page);\n    }\n\n    return (\n        <Fragment>\n            <div className=\"sub-category\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h4 className=\"card-title\">Brand <span className=\"text-info\">{brandInfo?.name}</span> Sub-categories</h4>\n                            <button type=\"button\" className=\"btn light btn-success\" data-toggle=\"modal\" data-target=\"#create-product-modal\">\n                                <i className=\"fa fa-plus mr-2\"></i> Add Sub-category\n                            </button>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"table-responsive\">\n                                <table className=\"table table-responsive-md\">\n                                    <thead>\n                                        <tr>\n                                            <th><strong>NAME</strong></th>\n                                            <th><strong>Date</strong></th>\n                                            <th><strong>Status</strong></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            brandSubCategory && brandSubCategory.length ? (\n                                                brandSubCategory.map((data, i) => {\n                                                    return <tr key={i}>\n                                                        <td>{data.name}</td>\n                                                        <td>{dateFormat(data.creatingDate)}</td>\n                                                        <td>{data.status ? 'Active' : \"Inactive\"}</td>\n                                                        <td>\n                                                            <div className=\"d-flex\">\n                                                                <a onClick={() => updateSubcategory(data)} className=\"btn btn-primary shadow btn-xs sharp mr-1\"><i className=\"fa fa-pencil\"></i></a>\n                                                                {/* <a href=\"#\" className=\"btn btn-danger shadow btn-xs sharp\"><i className=\"fa fa-trash\"></i></a> */}\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                })\n                                            ) : <h3>No Data found</h3>\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n\n                            \n                            <Pagination\n                                    handelPagination={handelPagination}\n                            ></Pagination>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"create-product-modal\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Add Sub-category from {brandInfo?.name}</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\"><span>&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className=\"form-group\">\n                            <label>Sub-category Name</label>\n                            <input type=\"text\" name=\"subName\" onChange={changeHandeler} value={subName} className=\"form-control\"/>\n                        </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-danger light\" data-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={saveSubCategory}>Save</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"update-product-modal\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Add Sub-category from {brandInfo?.name}</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\"><span>&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className=\"form-group\">\n                            <label>Sub-category Name</label>\n                            <input type=\"text\" name=\"subName\" onChange={e => setsubCategoryUpadetName(e.target.value)} value={subCategoryUpadetName} className=\"form-control\"/>\n                        </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-danger light\" data-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={editSubCategory}>Save</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </Fragment>\n    )\n}\n","/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/CartBox.js",["276","277"],"/home/tushar/Documents/react/e-bazar/src/contexts/OrderListContext.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Public/OrderDetails.js",["278"],{"ruleId":"279","severity":1,"message":"280","line":17,"column":9,"nodeType":"281","messageId":"282","endLine":17,"endColumn":17},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","replacedBy":"286"},{"ruleId":"283","replacedBy":"287"},{"ruleId":"285","replacedBy":"288"},{"ruleId":"279","severity":1,"message":"289","line":2,"column":9,"nodeType":"281","messageId":"282","endLine":2,"endColumn":13},{"ruleId":"290","severity":1,"message":"291","line":58,"column":8,"nodeType":"292","endLine":58,"endColumn":21,"suggestions":"293"},{"ruleId":"294","severity":1,"message":"295","line":92,"column":13,"nodeType":"296","endLine":93,"endColumn":64},{"ruleId":"297","severity":1,"message":"298","line":93,"column":22,"nodeType":"299","messageId":"300","endLine":93,"endColumn":41},{"ruleId":"301","severity":1,"message":"302","line":98,"column":13,"nodeType":"296","endLine":98,"endColumn":91},{"ruleId":"279","severity":1,"message":"303","line":138,"column":13,"nodeType":"281","messageId":"282","endLine":138,"endColumn":18},{"ruleId":"279","severity":1,"message":"303","line":146,"column":13,"nodeType":"281","messageId":"282","endLine":146,"endColumn":18},{"ruleId":"294","severity":1,"message":"295","line":152,"column":13,"nodeType":"296","endLine":153,"endColumn":64},{"ruleId":"297","severity":1,"message":"298","line":153,"column":22,"nodeType":"299","messageId":"300","endLine":153,"endColumn":41},{"ruleId":"301","severity":1,"message":"302","line":157,"column":21,"nodeType":"296","endLine":157,"endColumn":99},{"ruleId":"294","severity":1,"message":"304","line":163,"column":45,"nodeType":"296","endLine":163,"endColumn":86},{"ruleId":"283","replacedBy":"305"},{"ruleId":"285","replacedBy":"306"},{"ruleId":"279","severity":1,"message":"307","line":4,"column":8,"nodeType":"281","messageId":"282","endLine":4,"endColumn":15},{"ruleId":"279","severity":1,"message":"308","line":13,"column":37,"nodeType":"281","messageId":"282","endLine":13,"endColumn":43},{"ruleId":"279","severity":1,"message":"309","line":3,"column":10,"nodeType":"281","messageId":"282","endLine":3,"endColumn":15},{"ruleId":"279","severity":1,"message":"310","line":5,"column":10,"nodeType":"281","messageId":"282","endLine":5,"endColumn":18},{"ruleId":"279","severity":1,"message":"311","line":52,"column":11,"nodeType":"281","messageId":"282","endLine":52,"endColumn":25},{"ruleId":"294","severity":1,"message":"304","line":147,"column":65,"nodeType":"296","endLine":147,"endColumn":169},{"ruleId":"312","severity":1,"message":"313","line":92,"column":17,"nodeType":"314","messageId":"315","endLine":92,"endColumn":38,"fix":"316"},{"ruleId":"317","severity":1,"message":"318","line":156,"column":41,"nodeType":"296","endLine":157,"endColumn":166},{"ruleId":"319","severity":1,"message":"320","line":9,"column":101,"nodeType":"299","messageId":"321","endLine":9,"endColumn":102,"suggestions":"322"},{"ruleId":"319","severity":1,"message":"323","line":9,"column":103,"nodeType":"299","messageId":"321","endLine":9,"endColumn":104,"suggestions":"324"},{"ruleId":"319","severity":1,"message":"325","line":9,"column":105,"nodeType":"299","messageId":"321","endLine":9,"endColumn":106,"suggestions":"326"},{"ruleId":"279","severity":1,"message":"327","line":13,"column":12,"nodeType":"281","messageId":"282","endLine":13,"endColumn":16},{"ruleId":"279","severity":1,"message":"328","line":13,"column":18,"nodeType":"281","messageId":"282","endLine":13,"endColumn":25},{"ruleId":"279","severity":1,"message":"329","line":63,"column":20,"nodeType":"281","messageId":"282","endLine":63,"endColumn":29},{"ruleId":"294","severity":1,"message":"295","line":102,"column":25,"nodeType":"296","endLine":102,"endColumn":36},{"ruleId":"283","replacedBy":"330"},{"ruleId":"285","replacedBy":"331"},{"ruleId":"279","severity":1,"message":"332","line":1,"column":16,"nodeType":"281","messageId":"282","endLine":1,"endColumn":24},{"ruleId":"279","severity":1,"message":"333","line":10,"column":5,"nodeType":"281","messageId":"282","endLine":10,"endColumn":14},{"ruleId":"279","severity":1,"message":"334","line":12,"column":5,"nodeType":"281","messageId":"282","endLine":12,"endColumn":24},{"ruleId":"279","severity":1,"message":"335","line":13,"column":5,"nodeType":"281","messageId":"282","endLine":13,"endColumn":30},{"ruleId":"279","severity":1,"message":"336","line":14,"column":5,"nodeType":"281","messageId":"282","endLine":14,"endColumn":21},{"ruleId":"279","severity":1,"message":"337","line":15,"column":5,"nodeType":"281","messageId":"282","endLine":15,"endColumn":21},{"ruleId":"279","severity":1,"message":"338","line":24,"column":40,"nodeType":"281","messageId":"282","endLine":24,"endColumn":56},{"ruleId":"290","severity":1,"message":"339","line":38,"column":10,"nodeType":"292","endLine":38,"endColumn":18,"suggestions":"340"},{"ruleId":"317","severity":1,"message":"318","line":80,"column":53,"nodeType":"296","endLine":80,"endColumn":112},{"ruleId":"279","severity":1,"message":"341","line":16,"column":5,"nodeType":"281","messageId":"282","endLine":16,"endColumn":7},{"ruleId":"279","severity":1,"message":"342","line":13,"column":12,"nodeType":"281","messageId":"282","endLine":13,"endColumn":17},{"ruleId":"294","severity":1,"message":"295","line":70,"column":37,"nodeType":"296","endLine":70,"endColumn":124},{"ruleId":"297","severity":1,"message":"298","line":70,"column":66,"nodeType":"299","messageId":"300","endLine":70,"endColumn":86},{"ruleId":"279","severity":1,"message":"343","line":2,"column":8,"nodeType":"281","messageId":"282","endLine":2,"endColumn":9},{"ruleId":"294","severity":1,"message":"304","line":124,"column":73,"nodeType":"296","endLine":124,"endColumn":160},{"ruleId":"294","severity":1,"message":"304","line":125,"column":73,"nodeType":"296","endLine":125,"endColumn":158},{"ruleId":"294","severity":1,"message":"304","line":126,"column":73,"nodeType":"296","endLine":126,"endColumn":159},{"ruleId":"290","severity":1,"message":"344","line":25,"column":8,"nodeType":"292","endLine":25,"endColumn":10,"suggestions":"345"},{"ruleId":"294","severity":1,"message":"304","line":152,"column":65,"nodeType":"296","endLine":152,"endColumn":163},{"ruleId":"279","severity":1,"message":"341","line":6,"column":5,"nodeType":"281","messageId":"282","endLine":6,"endColumn":7},{"ruleId":"312","severity":1,"message":"346","line":100,"column":19,"nodeType":"314","messageId":"315","endLine":100,"endColumn":44,"fix":"347"},{"ruleId":"312","severity":1,"message":"348","line":101,"column":19,"nodeType":"314","messageId":"315","endLine":101,"endColumn":60,"fix":"349"},{"ruleId":"312","severity":1,"message":"350","line":102,"column":19,"nodeType":"314","messageId":"315","endLine":102,"endColumn":54,"fix":"351"},{"ruleId":"312","severity":1,"message":"352","line":103,"column":19,"nodeType":"314","messageId":"315","endLine":103,"endColumn":46,"fix":"353"},{"ruleId":"312","severity":1,"message":"354","line":104,"column":19,"nodeType":"314","messageId":"315","endLine":104,"endColumn":42,"fix":"355"},{"ruleId":"312","severity":1,"message":"356","line":105,"column":19,"nodeType":"314","messageId":"315","endLine":105,"endColumn":52,"fix":"357"},{"ruleId":"312","severity":1,"message":"358","line":106,"column":19,"nodeType":"314","messageId":"315","endLine":106,"endColumn":62,"fix":"359"},{"ruleId":"312","severity":1,"message":"360","line":107,"column":19,"nodeType":"314","messageId":"315","endLine":107,"endColumn":84,"fix":"361"},{"ruleId":"312","severity":1,"message":"362","line":108,"column":19,"nodeType":"314","messageId":"315","endLine":108,"endColumn":62,"fix":"363"},{"ruleId":"312","severity":1,"message":"364","line":109,"column":19,"nodeType":"314","messageId":"315","endLine":109,"endColumn":58,"fix":"365"},{"ruleId":"312","severity":1,"message":"366","line":110,"column":19,"nodeType":"314","messageId":"315","endLine":110,"endColumn":64,"fix":"367"},{"ruleId":"312","severity":1,"message":"368","line":111,"column":19,"nodeType":"314","messageId":"315","endLine":111,"endColumn":66,"fix":"369"},{"ruleId":"312","severity":1,"message":"370","line":112,"column":19,"nodeType":"314","messageId":"315","endLine":112,"endColumn":64,"fix":"371"},{"ruleId":"279","severity":1,"message":"372","line":145,"column":13,"nodeType":"281","messageId":"282","endLine":145,"endColumn":21},{"ruleId":"279","severity":1,"message":"373","line":7,"column":22,"nodeType":"281","messageId":"282","endLine":7,"endColumn":33},{"ruleId":"279","severity":1,"message":"374","line":8,"column":22,"nodeType":"281","messageId":"282","endLine":8,"endColumn":33},{"ruleId":"279","severity":1,"message":"375","line":1,"column":10,"nodeType":"281","messageId":"282","endLine":1,"endColumn":20},{"ruleId":"283","replacedBy":"376"},{"ruleId":"285","replacedBy":"377"},{"ruleId":"279","severity":1,"message":"289","line":3,"column":9,"nodeType":"281","messageId":"282","endLine":3,"endColumn":13},{"ruleId":"279","severity":1,"message":"329","line":66,"column":20,"nodeType":"281","messageId":"282","endLine":66,"endColumn":29},{"ruleId":"294","severity":1,"message":"295","line":105,"column":25,"nodeType":"296","endLine":105,"endColumn":36},{"ruleId":"279","severity":1,"message":"332","line":1,"column":27,"nodeType":"281","messageId":"282","endLine":1,"endColumn":35},{"ruleId":"290","severity":1,"message":"378","line":24,"column":8,"nodeType":"292","endLine":24,"endColumn":10,"suggestions":"379"},{"ruleId":"294","severity":1,"message":"304","line":143,"column":65,"nodeType":"296","endLine":143,"endColumn":161},{"ruleId":"279","severity":1,"message":"380","line":1,"column":26,"nodeType":"281","messageId":"282","endLine":1,"endColumn":35},{"ruleId":"279","severity":1,"message":"381","line":1,"column":37,"nodeType":"281","messageId":"282","endLine":1,"endColumn":45},{"ruleId":"317","severity":1,"message":"318","line":97,"column":81,"nodeType":"296","endLine":98,"endColumn":195},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["382"],"no-negated-in-lhs",["383"],["382"],["383"],"'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'brand' and 'category'. Either include them or remove the dependency array.","ArrayExpression",["384"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","jsx-a11y/role-supports-aria-props","The attribute aria-expanded is not supported by the role list. This role is implicit on the element ul.","'query' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["382"],["383"],"'Cookies' is defined but never used.","'errors' is assigned a value but never used.","'toast' is defined but never used.","'postData' is defined but never used.","'deleteCategory' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"dateOfBirth\"] found.","Property","unnecessarilyComputedProperty",{"range":"385","text":"386"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-useless-escape","Unnecessary escape character: \\..","unnecessaryEscape",["387","388"],"Unnecessary escape character: \\+.",["389","390"],"Unnecessary escape character: \\*.",["391","392"],"'page' is assigned a value but never used.","'setpage' is assigned a value but never used.","'setUpdate' is assigned a value but never used.",["382"],["383"],"'Fragment' is defined but never used.","'Magnifier' is defined but never used.","'SideBySideMagnifier' is defined but never used.","'PictureInPictureMagnifier' is defined but never used.","'MOUSE_ACTIVATION' is defined but never used.","'TOUCH_ACTIVATION' is defined but never used.","'HandelModalClose' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'product.photos' and 'productId'. Either include them or remove the dependency array.",["393"],"'db' is assigned a value but never used.","'token' is assigned a value but never used.","'$' is defined but never used.","React Hook useEffect has missing dependencies: 'categoryId', 'getCategorie', and 'getCategoryBrand'. Either include them or remove the dependency array.",["394"],"Unnecessarily computed property [\"name\"] found.",{"range":"395","text":"396"},"Unnecessarily computed property [\"regularPrice\"] found.",{"range":"397","text":"398"},"Unnecessarily computed property [\"sellPrice\"] found.",{"range":"399","text":"400"},"Unnecessarily computed property [\"stock\"] found.",{"range":"401","text":"402"},"Unnecessarily computed property [\"sku\"] found.",{"range":"403","text":"404"},"Unnecessarily computed property [\"category\"] found.",{"range":"405","text":"406"},"Unnecessarily computed property [\"categoryBrand\"] found.",{"range":"407","text":"408"},"Unnecessarily computed property [\"categoryBrandSubCategory\"] found.",{"range":"409","text":"410"},"Unnecessarily computed property [\"discountPrice\"] found.",{"range":"411","text":"412"},"Unnecessarily computed property [\"isFlushSell\"] found.",{"range":"413","text":"414"},"Unnecessarily computed property [\"isSlideProduct\"] found.",{"range":"415","text":"416"},"Unnecessarily computed property [\"isBundleProduct\"] found.",{"range":"417","text":"418"},"Unnecessarily computed property [\"productDetails\"] found.",{"range":"419","text":"420"},"'instance' is assigned a value but never used.","'setMinValue' is assigned a value but never used.","'setMaxValue' is assigned a value but never used.","'localeData' is defined but never used.",["382"],["383"],"React Hook useEffect has missing dependencies: 'brandId', 'getBrandInfo', and 'getSubBrandCategory'. Either include them or remove the dependency array.",["421"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"422","fix":"423"},[2823,2838],"\"dateOfBirth\"",{"messageId":"424","fix":"425","desc":"426"},{"messageId":"427","fix":"428","desc":"429"},{"messageId":"424","fix":"430","desc":"426"},{"messageId":"427","fix":"431","desc":"429"},{"messageId":"424","fix":"432","desc":"426"},{"messageId":"427","fix":"433","desc":"429"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},[2900,2908],"\"name\"",[2945,2961],"\"regularPrice\"",[3006,3019],"\"sellPrice\"",[3061,3070],"\"stock\"",[3108,3115],"\"sku\"",[3151,3163],"\"category\"",[3204,3221],"\"categoryBrand\"",[3267,3295],"\"categoryBrandSubCategory\"",[3352,3369],"\"discountPrice\"",[3415,3430],"\"isFlushSell\"",[3474,3492],"\"isSlideProduct\"",[3539,3558],"\"isBundleProduct\"",[3606,3624],"\"productDetails\"",{"desc":"438","fix":"439"},"Update the dependencies array to be: [brand, category, subCategory]",{"range":"440","text":"441"},"removeEscape",{"range":"442","text":"443"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"444","text":"445"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"446","text":"443"},{"range":"447","text":"445"},{"range":"448","text":"443"},{"range":"449","text":"445"},"Update the dependencies array to be: [isOpen, product.photos, productId]",{"range":"450","text":"451"},"Update the dependencies array to be: [categoryId, getCategorie, getCategoryBrand]",{"range":"452","text":"453"},"Update the dependencies array to be: [brandId, getBrandInfo, getSubBrandCategory]",{"range":"454","text":"455"},[2067,2080],"[brand, category, subCategory]",[284,285],"",[284,284],"\\",[286,287],[286,286],[288,289],[288,288],[1295,1303],"[isOpen, product.photos, productId]",[966,968],"[categoryId, getCategorie, getCategoryBrand]",[996,998],"[brandId, getBrandInfo, getSubBrandCategory]"]
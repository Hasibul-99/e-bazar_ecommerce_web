[{"/home/tushar/Documents/react/e-bazar/src/router/App.js":"1","/home/tushar/Documents/react/e-bazar/src/layouts/Private.js":"2","/home/tushar/Documents/react/e-bazar/src/router/public-router.js":"3","/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/LeftSidebar.js":"4","/home/tushar/Documents/react/e-bazar/src/pages/Auth/SignUp.js":"5","/home/tushar/Documents/react/e-bazar/src/pages/Auth/MarchentSignup.js":"6","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/Products.js":"7","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/Category.js":"8","/home/tushar/Documents/react/e-bazar/src/pages/Public/UserProfile.js":"9","/home/tushar/Documents/react/e-bazar/src/scripts/api-service.js":"10","/home/tushar/Documents/react/e-bazar/src/scripts/helper.js":"11","/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/RandomProduct.js":"12","/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/ProductModalView.js":"13","/home/tushar/Documents/react/e-bazar/src/index.js":"14","/home/tushar/Documents/react/e-bazar/src/router/private-router.js":"15","/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/TopNavBar.js":"16","/home/tushar/Documents/react/e-bazar/src/pages/Private/common/Navbar.js":"17","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/ProductAdd.js":"18","/home/tushar/Documents/react/e-bazar/src/pages/Auth/Registration.js":"19","/home/tushar/Documents/react/e-bazar/src/scripts/checkRes.js":"20","/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/ItemType.js":"21","/home/tushar/Documents/react/e-bazar/src/layouts/Auth.js":"22","/home/tushar/Documents/react/e-bazar/src/layouts/Public.js":"23","/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/Footer.js":"24","/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/BundlesPackagesOffer.js":"25","/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/index.js":"26","/home/tushar/Documents/react/e-bazar/src/pages/Auth/ForgetPassword.js":"27","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/Orders.js":"28","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/Brand.js":"29","/home/tushar/Documents/react/e-bazar/src/pages/Private/common/Pagination.js":"30","/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/NonBrandItems.js":"31","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/ProductEdit.js":"32","/home/tushar/Documents/react/e-bazar/src/scripts/api.js":"33","/home/tushar/Documents/react/e-bazar/src/router/auth-route.js":"34","/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/QuantityInput.js":"35","/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/TopSlider.js":"36","/home/tushar/Documents/react/e-bazar/src/pages/Private/common/Sidebar.js":"37","/home/tushar/Documents/react/e-bazar/src/pages/Public/Product-List.js":"38","/home/tushar/Documents/react/e-bazar/src/pages/Auth/SignIn.js":"39","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/SubCategory.js":"40"},{"size":1258,"mtime":1610101828189,"results":"41","hashOfConfig":"42"},{"size":1230,"mtime":1609262940434,"results":"43","hashOfConfig":"42"},{"size":624,"mtime":1612716127955,"results":"44","hashOfConfig":"42"},{"size":6335,"mtime":1613216297922,"results":"45","hashOfConfig":"42"},{"size":4055,"mtime":1610111201602,"results":"46","hashOfConfig":"42"},{"size":12243,"mtime":1613218961520,"results":"47","hashOfConfig":"42"},{"size":6827,"mtime":1613217836766,"results":"48","hashOfConfig":"42"},{"size":10352,"mtime":1612716127951,"results":"49","hashOfConfig":"42"},{"size":11204,"mtime":1612716127955,"results":"50","hashOfConfig":"42"},{"size":3459,"mtime":1611509295308,"results":"51","hashOfConfig":"42"},{"size":349,"mtime":1613217907718,"results":"52","hashOfConfig":"42"},{"size":5081,"mtime":1612716127955,"results":"53","hashOfConfig":"42"},{"size":5411,"mtime":1613223872834,"results":"54","hashOfConfig":"42"},{"size":551,"mtime":1612716127951,"results":"55","hashOfConfig":"42"},{"size":1682,"mtime":1612720060073,"results":"56","hashOfConfig":"42"},{"size":7241,"mtime":1613216489244,"results":"57","hashOfConfig":"42"},{"size":6065,"mtime":1613216538409,"results":"58","hashOfConfig":"42"},{"size":16744,"mtime":1613222931157,"results":"59","hashOfConfig":"42"},{"size":1924,"mtime":1610042510617,"results":"60","hashOfConfig":"42"},{"size":399,"mtime":1610039120735,"results":"61","hashOfConfig":"42"},{"size":1960,"mtime":1612716127955,"results":"62","hashOfConfig":"42"},{"size":1161,"mtime":1613222587817,"results":"63","hashOfConfig":"42"},{"size":1465,"mtime":1609262940434,"results":"64","hashOfConfig":"42"},{"size":308,"mtime":1609262940438,"results":"65","hashOfConfig":"42"},{"size":311,"mtime":1612716127951,"results":"66","hashOfConfig":"42"},{"size":541,"mtime":1607267262775,"results":"67","hashOfConfig":"42"},{"size":217,"mtime":1606759338016,"results":"68","hashOfConfig":"42"},{"size":7472,"mtime":1612716127951,"results":"69","hashOfConfig":"42"},{"size":9408,"mtime":1612716127951,"results":"70","hashOfConfig":"42"},{"size":746,"mtime":1611500759212,"results":"71","hashOfConfig":"42"},{"size":1697,"mtime":1612718031294,"results":"72","hashOfConfig":"42"},{"size":21131,"mtime":1613209252803,"results":"73","hashOfConfig":"42"},{"size":1438,"mtime":1613205209338,"results":"74","hashOfConfig":"42"},{"size":944,"mtime":1609262940438,"results":"75","hashOfConfig":"42"},{"size":1222,"mtime":1612716127951,"results":"76","hashOfConfig":"42"},{"size":2364,"mtime":1612716127955,"results":"77","hashOfConfig":"42"},{"size":2775,"mtime":1613216987113,"results":"78","hashOfConfig":"42"},{"size":5113,"mtime":1612716127955,"results":"79","hashOfConfig":"42"},{"size":2939,"mtime":1612716127951,"results":"80","hashOfConfig":"42"},{"size":9351,"mtime":1612716127955,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},"17s8sv9",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"85"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"106","usedDeprecatedRules":"85"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"109"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"109"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":13,"source":"159","usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"109"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tushar/Documents/react/e-bazar/src/router/App.js",["179"],"import React, { Component } from 'react';\n\nimport {\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\n\nimport PublicLayout from \"../layouts/Public\";\nimport PrivateLayout from \"../layouts/Private\";\nimport AuthLayout from \"../layouts/Auth\";\n\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Redux\nimport {Provider} from 'react-redux';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLogin: true,\n            isAdmin: false,\n        }\n    }\n    componentDidMount() {\n        // store.dispatch(loadUser());\n    }\n\n    render() {\n        return (\n            <>\n            {/* // <Provider store={store}> */}\n                <Switch>\n                    <Route path=\"/admin\" render={props => <PrivateLayout {...props} />} ></Route>\n                    <Route path=\"/auth\" render={props => <AuthLayout {...props} />}></Route> \n                    <Route path=\"/\" render={props => <PublicLayout {...props} />}></Route>\n                    <Redirect from=\"/\" to=\"/\" /> \n                </Switch>\n                <ToastContainer position=\"top-right\"/>\n            {/* // </Provider> */}\n            </>\n        )\n    }\n}\n\nexport default App;",["180","181"],"/home/tushar/Documents/react/e-bazar/src/layouts/Private.js",[],["182","183"],"/home/tushar/Documents/react/e-bazar/src/router/public-router.js",[],["184","185"],"/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/LeftSidebar.js",["186","187","188","189","190","191","192","193","194","195","196"],"/home/tushar/Documents/react/e-bazar/src/pages/Auth/SignUp.js",[],["197","198"],"/home/tushar/Documents/react/e-bazar/src/pages/Auth/MarchentSignup.js",["199","200"],"/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/Products.js",["201","202"],"/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/Category.js",["203","204"],"import React, {Fragment, useState, useEffect} from 'react';\nimport {Link} from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport $ from \"jquery\";\nimport Pagination from \"../common/Pagination\";\n\n// import { checkRes } from \"../../../scripts/checkRes\";\nimport { postData, getData, putData } from \"../../../scripts/api-service\";\nimport { CREATE_CATEGORY, GET_CATEGORY_LIST, UPDATE_CATEGORY } from \"../../../scripts/api\";\nimport { dateFormat } from \"../../../scripts/helper\";\nimport swal from 'sweetalert2';\n\nexport default function Category() {\n    const [categoryName, setCategoryName] = useState();\n    const [isUnbrandCategory, setIsUnbrandCategory] = useState(false);\n    const [categoryList, setCategoryList] = useState([]);\n    const [updateCategory, setUpdateCategory] = useState();\n    const [updateCategoryName, setUpdateCategoryName] = useState();\n\n    const changeHandeler = (e) => {\n        let value = e.target.value;\n        setCategoryName(value);\n    }\n\n    const addCategory = async () => {\n        if (categoryName) {\n            let res = await postData(CREATE_CATEGORY, {name: categoryName, isUnbrandCategory: isUnbrandCategory});\n\n            if (res?.data?.isSuccess) {\n                toast.success(\"Category Add successfully\");\n                $(\"#create-category-modal\").modal('hide');\n                setCategoryName(\"\");\n            } else {\n                toast.error(res.msg);\n            }\n        } else {\n            toast(\"Category name is required\");\n        }\n    }\n\n    const getCategoryList = async (page) => {\n        let query = page ? GET_CATEGORY_LIST + '?page='+ page : GET_CATEGORY_LIST;\n        let res = await getData(query);\n\n        if (res?.data?.isSuccess) {\n            setCategoryList(res.data.data);\n        } else {\n            toast(\"Something went wrong\");\n        }\n    }\n\n    const deleteCategory = (data) => {\n        swal.fire({\n            title: 'Are you sure?',\n            text:'You want to delete this Category!',\n            icon: 'warning',\n            showCancelButton: \"true\",\n            confirmButtonText:'Yes, Approve it!',\n            cancelButtonText: 'Cancel',\n          }).then( async result => {\n            if (result.value) {\n                let res = await getData(GET_CATEGORY_LIST);\n\n                if (res?.data?.isSuccess) {\n                    setCategoryList(res.data.data);\n                } else {\n                    toast(\"Something went wrong\");\n                }\n            }\n        })\n    }\n\n    const updateCategoryContent = (data) => {\n        setUpdateCategory(data);\n        setUpdateCategoryName(data.name);\n        $('#update-category-modal').modal('show');\n    }\n\n    const changeUpdateHandeler = (e) => {\n        let value = e.target.value;\n        setUpdateCategoryName(value);\n    }\n\n    const editCategory = async () => {\n        if (updateCategoryName) {\n            let res = await putData(UPDATE_CATEGORY, {name: updateCategoryName, _id: updateCategory._id});\n\n            if (res?.data?.isSuccess) {\n                toast(\"Category Update Successfully\");\n                $(\"#update-category-modal\").modal('hide');\n                setUpdateCategory();\n                setUpdateCategoryName();\n\n                getCategoryList();\n            } else {\n                toast(\"Something went wrong\");\n            }\n        } else {\n            toast(\"Category name is required\");\n        }\n    }\n\n    const handelPagination = (page) => {\n        getCategoryList(page);\n    }\n\n    useEffect(() => {\n        getCategoryList()\n    }, []);\n\n    return (\n        <Fragment>\n        <div className=\"category\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h4 className=\"card-title\">All Categories</h4>\n                            <button type=\"button\" className=\"btn light btn-success\" data-toggle=\"modal\" data-target=\"#create-category-modal\">\n                                <i className=\"fa fa-plus mr-2\"></i> Add Category\n                            </button>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"table-responsive\">\n                                <table className=\"table table-responsive-md\">\n                                    <thead>\n                                        <tr>\n                                            <th><strong>NAME</strong></th>\n                                            <th><strong>Date</strong></th>\n                                            <th><strong>Status</strong></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            categoryList.length ? (\n                                                categoryList.map((category, i) => {\n                                                    return (<tr key={i}>\n                                                        <td>{category.name}</td>\n                                                        <td>{dateFormat(category.creatingDate)}</td>\n                                                        <td>{category.status ? \"Active\" : \"Inactive\"}</td>\n                                                        <td>\n                                                            <div className=\"d-flex\">\n                                                                {\n                                                                    !category.isUnbrandCategory ? <Link to={`/admin/brand/${category._id}`} \n                                                                    className=\"btn btn-dark shadow btn-xs sharp mr-1\"><i className=\"fa fa-eye\"></i></Link> : \"\"\n                                                                }\n                                                                <a onClick={() => updateCategoryContent(category)} className=\"btn btn-primary shadow btn-xs sharp mr-1\">\n                                                                    <i className=\"fa fa-pencil\"></i>\n                                                                </a>\n                                                                {/* <a onClick={() => deleteCategory(category)} className=\"btn btn-danger shadow btn-xs sharp\">\n                                                                    <i className=\"fa fa-trash\"></i>\n                                                                </a> */}\n                                                            </div>\n                                                        </td>\n                                                    </tr>)\n                                                })\n                                            ) : <h3>No Data found</h3>\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n\n                            <Pagination\n                                    handelPagination={handelPagination}\n                            ></Pagination>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"create-category-modal\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Category Add</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\"><span>&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-12\">\n                                <label>Category Name</label>\n                                <input type=\"text\" name=\"category_name\" onChange={changeHandeler} className=\"form-control\"/>\n                            </div>\n                        </div>\n                        <div className=\"form-check\">\n                            <input type=\"checkbox\" className=\"form-check-input\" onChange={(e) => setIsUnbrandCategory(e.target.checked)} id=\"exampleCheck1\"/>\n                            <label className=\"form-check-label\" for=\"exampleCheck1\">Check it for make it non brand category.</label>\n                        </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-danger light\" data-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={() => addCategory()}>Save</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"update-category-modal\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Category Update</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\"><span>&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-12\">\n                                <label>Category Name</label>\n                                <input type=\"text\" name=\"update_category_name\" value={updateCategoryName} onChange={changeUpdateHandeler} className=\"form-control\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-danger light\" data-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={() => editCategory()}>Update</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </Fragment>\n    )\n}\n","/home/tushar/Documents/react/e-bazar/src/pages/Public/UserProfile.js",["205","206"],"import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { LOGIN_USER_INFO, UPLOAD_PROFILE_IMAGE, UPDATE_USER } from \"../../scripts/api\";\nimport { getData, postData, putData } from \"../../scripts/api-service\";\nimport demoUser from \"../../assets/images/profile/17.jpg\"\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Fragment } from 'react';\n\nexport default class UserProfile extends Component {\n    formData = {\n        name: \"\",\n        mobile: \"\",\n        nid: \"\",\n        address: \"\",\n        dateOfBirth: \"\",\n        bussinessName: \"\",\n        marchentDesignation: \"\",\n        accountName: \"\",\n        accountNumber: \"\",\n        branch: \"\",\n    }\n    constructor(props) {\n        super(props);\n        this.state = {\n            userInfo: null,\n            formData: this.formData\n        };\n    }\n\n    componentDidMount() {\n        this.getUserInfo()\n    }\n\n    getUserInfo = async () => {\n        let res = await getData(LOGIN_USER_INFO);\n        \n        if (res?.data) {\n            let data = res.data;\n            this.setState({userInfo: data});\n\n            this.setState({formData: {\n                name: data.name,\n                mobile: data.mobile,\n                nid: data.nid,\n                address: data.address,\n                dateOfBirth: new Date(data.dateOfBirth) || null,\n                bussinessName: data?.marchant?.bussinessName,\n                marchentDesignation: data?.marchant?.marchantDesignation,\n                accountName: data?.marchant?.bankInfo?.accountName,\n                accountNumber: data?.marchant?.bankInfo?.accountNumber,\n                branch: data?.marchant?.bankInfo?.branch\n            }})\n        }\n    }\n\n    uploadImage = async (e) => {\n        let ele = e.target;\n        \n        let data = new FormData();\n        let file = ele.files[0];\n        data.append('avatar', file);\n        \n        let res = await postData(UPLOAD_PROFILE_IMAGE, data);\n        if (res?.data?.isSuccess) {\n            toast.success(\"Image Upload Successfully\");\n            let ele = document.getElementById('js-img-thumb');\n            if (ele) ele.src = `http://easyexpress24.com:5000/static/${res.data.data}`\n        } else {\n            toast.error(\"Something went wrong!\");\n        }\n\n    }\n\n    setStartDate = (date) => {\n        this.setState({ \n            formData: {\n                ...this.state.formData,\n                [\"dateOfBirth\"]: date,\n            }\n        });\n    }\n\n    changeHandeler = (e) => {\n        let name = e.target.name,\n            value = e.target.value;\n\n        this.setState({ \n            formData: {\n                ...this.state.formData,\n                [name]: value,\n            }\n        });\n    } \n\n    formSubmit = async() => {\n        let data = {\n            \"name\": this.state.formData.name,\n            \"mobile\": this.state.formData.mobile,\n            \"nid\": this.state.formData.nid,\n            \"address\": this.state.formData.address,\n            \"dateOfBirth\": this.state.formData.dateOfBirth,\n        }\n\n        if (this.state.userInfo.userType === 'MARCHANT') {\n            let marchent = {\n                \"bussinessName\": this.state.formData.bussinessName,\n                \"marchantDesignation\": this.state.formData.marchentDesignation,\n                \"bankInfo\":{\n                    \"accountName\": this.state.formData.accountName,\n                    \"accountNumber\": this.state.formData.accountNumber,\n                    \"branch\": this.state.formData.branch\n                }\n            }\n\n            data.marchant = marchent;\n        }\n\n        let res = await putData(UPDATE_USER, data);\n\n        if (res?.data?.isSuccess) {\n            toast.success(\"User info update successfully!\");\n        } else {\n            toast.error(res?.data?.msg);\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"user-profile\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                {/* <img class=\"img-thumbnail\" src={demoUser} /> */}\n                                <div class=\"avatar-upload\">\n                                    <div class=\"avatar-edit\">\n                                        <input type='file' id=\"imageUpload\" accept=\".png, .jpg, .jpeg\" onChange={this.uploadImage} />\n                                        <label for=\"imageUpload\"></label>\n                                    </div>\n                                    <div className=\"user-acater\">\n                                        <img id=\"js-img-thumb\" class=\"img-thumbnail\"\n                                             src={ this.state?.userInfo?.avatar ? `http://easyexpress24.com:5000/static/${this.state.userInfo.avatar}` : demoUser} />\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            <div className=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Name</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"name\" onChange={this.changeHandeler} value={this.state?.formData?.name}/>\n                                </div>\n\n                                {/* <div class=\"form-group d-none\">\n                                    <label>Email</label>\n                                    <input type=\"email\" class=\"form-control\" value={this.state?.userInfo?.email}/>\n                                </div> */}\n                            </div>\n\n                            <div className=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Mobile Number</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"mobile\" \n                                        onChange={this.changeHandeler}  value={this.state?.formData?.mobile}/>\n                                </div>\n                            </div>\n\n                            <div className=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>NID</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"nid\" onChange={this.changeHandeler} \n                                        value={this.state?.formData?.nid}/>\n                                </div>\n                            </div>\n\n                            <div className=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Date of Birth</label>\n                                    <div className=\"date-container\">\n                                        <DatePicker selected={ this.state?.formData?.dateOfBirth ?\n                                             this.state?.formData?.dateOfBirth : new Date()} \n                                        onChange={date => this.setStartDate(date)} />\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            <div className=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Address</label>\n                                    <textarea class=\"form-control\" rows=\"3\" name=\"address\" onChange={this.changeHandeler} \n                                        value={this.state?.formData?.address}></textarea>\n                                </div>\n                            </div>\n                        </div>\n                        {/* MARCHANT */}\n                        {\n                            this.state?.userInfo?.userType === 'MARCHANT' ? \n                            <Fragment>\n                                <hr/>\n\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label>Business Name</label>\n                                            <input type=\"text\" value={this.state?.formData?.bussinessName}\n                                             onChange={this.changeHandeler} name=\"bussinessName\" class=\"form-control\"/>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label>Marchent Designation</label>\n                                            <input type=\"text\" value={this.state?.formData?.marchentDesignation} \n                                                onChange={this.changeHandeler}  name=\"marchentDesignation\"  class=\"form-control\"/>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label>Bank Account Name </label>\n                                            <input type=\"text\" value={this.state?.formData?.accountName} \n                                                onChange={this.changeHandeler} name=\"accountName\"  class=\"form-control\"/>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label>Bank Account Number </label>\n                                            <input type=\"text\" value={this.state?.formData?.accountNumber} \n                                                onChange={this.changeHandeler}  name=\"accountNumber\"  class=\"form-control\"/>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label>Bank Branch </label>\n                                            <input type=\"text\" value={this.state?.formData?.branch} \n                                                onChange={this.changeHandeler}  name=\"branch\" class=\"form-control\"/>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Fragment> : \"\"\n                        }\n                        <hr/>\n\n                        <div className=\"row mb-5\">\n                            <div className=\"col-12\">\n                                <button className=\"btn btn-success float-right\" onClick={this.formSubmit}>Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","/home/tushar/Documents/react/e-bazar/src/scripts/api-service.js",[],["207","208"],"/home/tushar/Documents/react/e-bazar/src/scripts/helper.js",["209","210","211"],"/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/RandomProduct.js",["212","213","214"],"import React, {Fragment, useState, useEffect} from 'react';\nimport $ from \"jquery\";\nimport { useHistory } from \"react-router-dom\";\nimport { getData } from \"../../../scripts/api-service\";\nimport { GET_RPODUCT } from \"../../../scripts/api\";\nimport demoProduct from \"../../../assets/images/demo-product.png\";\nimport ProductModalView from \"../../Components/Common/ProductModalView\";\n\nimport Localbase from 'localbase';\nlet db = new Localbase('db')\n\nexport default function RandomProduct() {\n    const [products, setProducts] = useState([]);\n    const [page, setpage] = useState(1);\n    const history = useHistory();\n\n    useEffect(() => {\n        getProductList();\n    }, []);\n\n    const getProductList = async () => {\n        let res = await getData(GET_RPODUCT);\n\n        if (res?.data?.isSuccess) {\n            setProducts(res?.data?.data);\n        }\n    };\n\n    const viewMore = () => {\n        history.push('/products');\n    }\n\n    return (\n        <div className=\"random-products mt-4\">\n            <div className=\"card\">\n                <div className=\"card-header d-none\"></div>\n                <div className=\"card-header\">\n                    <div className=\"row\">\n                        {   \n                            products.length ? \n                            products.map(product => {\n                                return <div className=\"col-12 col-sm-6 col-md-6 col-lg-6 col-xl-3\" key={product._id}>\n                                        <ProductCard product={product}></ProductCard>\n                                    </div>\n                            }) : <h3>No Product Found</h3>\n                        }\n\n                        <div className=\"col-12 container\">\n                            <div className=\"button-effect\">\n                                <button class=\"effect effect-4 button-4 float-righ\" onClick={viewMore}>View More</button>\n                            </div>\n                        </div>\n                    </div>                    \n                </div>\n            </div>\n        </div>\n    )\n};\n\nfunction ProductCard( {product}) {\n    const [isOpen, setIsOpen] = useState(false);\n    const [update, setUpdate] = useState(Math.random());\n \n    const openModal = (productId) => {\n        $(`#product-view-modal-${productId}`).modal(\"show\");\n        setIsOpen(true);\n    }\n\n    const handelModalClose = () => {\n        \n    }\n\n    const addProductIncard = (item) => {\n        db.collection('products').doc({ _id: item._id }).get().then(doc => {\n            if (doc) {\n                db.collection('products').doc({ _id: item._id  }).update({\n                    total: doc.total + 1 \n                });\n            } else {\n                item.total = 1;\n                db.collection('products').add(item);\n            }\n\n            setUpdate(Math.random());\n        });\n    }\n\n    return (\n        <Fragment>\n            <div className=\"product-card\">\n                {\n                    !(product.stock - product.totalSell) ? \n                    <div className=\"badge\">Out of Stock</div> : ''\n                }\n                <div className=\"product-tumb\">\n                    {\n                        product?.photos?.length ? <Fragment>\n                            <img src={`http://easyexpress24.com:5000/static/${product?.photos[0]}`} alt=\"\"/>\n                        </Fragment> : <Fragment>\n                            <img src={demoProduct} alt=\"\"/>\n                        </Fragment>\n                    }\n                </div>\n                <div className=\"product-details\">\n                    <span className=\"product-catagory\">Women,bag</span>\n                    <h5><a href=\"\">{product.name}</a></h5>\n                    <div className=\"product-bottom-details\">\n                        <div className=\"product-price\">\n                            {\n                                product.discountPrice ? <Fragment>\n                                    <small>৳{product.sellPrice}</small>\n                                    ৳{ product.sellPrice - product.discountPrice }\n                                </Fragment> : <Fragment>৳{product.sellPrice}</Fragment> \n                            }\n                        </div>\n                        <div className=\"product-links\">\n                            <span className=\"cursor-pointer\" onClick={()=> openModal(product._id)}>\n                                <i className=\"fa fa-eye\"></i>\n                            </span>\n                            <span className=\"cursor-pointer\" onClick={() => addProductIncard(product)}>\n                                <i className=\"fa fa-shopping-cart\"></i>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <ProductModalView\n                productId={product._id} \n                isOpen={isOpen}\n                product={product}\n                update={update}\n                HandelModalClose={handelModalClose}>\n            </ProductModalView>\n        </Fragment>\n        \n    )\n}",["215","216"],"/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/ProductModalView.js",["217","218","219","220","221","222","223","224","225"],"/home/tushar/Documents/react/e-bazar/src/index.js",["226"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport './assets/fontawesome-free/css/all.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"./assets/css/style.css\";\nimport './assets/scss/main.scss';\n\nimport App from \"./router/App\";\n\nimport Localbase from 'localbase';\nlet db = new Localbase('db')\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,document.getElementById('root')\n);","/home/tushar/Documents/react/e-bazar/src/router/private-router.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/TopNavBar.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Private/common/Navbar.js",["227","228","229"],"/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/ProductAdd.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Auth/Registration.js",[],"/home/tushar/Documents/react/e-bazar/src/scripts/checkRes.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/ItemType.js",[],"/home/tushar/Documents/react/e-bazar/src/layouts/Auth.js",[],"/home/tushar/Documents/react/e-bazar/src/layouts/Public.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/Footer.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/BundlesPackagesOffer.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/index.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Auth/ForgetPassword.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/Orders.js",["230","231","232","233","234","235"],"import React, { Component, Fragment } from 'react';\nimport $ from \"jquery\";\n\nimport {Link} from \"react-router-dom\";\nimport { toast } from 'react-toastify';\n\nimport { putData, getData } from \"../../../scripts/api-service\";\nimport { GET_ORDER_LIST, UPDATE_ORDER } from \"../../../scripts/api\";\nimport Pagination from \"../common/Pagination\";\n\nimport {loadPageVar, dateFormat} from \"../../../scripts/helper\";\nexport default class Orders extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pageValue: 1, \n            orderList: []\n        };\n    }\n\n    componentDidMount() {\n        this.setState({pageValue: loadPageVar('page') });\n        this.getOrderList(loadPageVar('page'));\n    }\n\n    getOrderList = async (page) => {\n        let url = page ? GET_ORDER_LIST + '?page='+ page : GET_ORDER_LIST;\n        let res = await getData(url);\n\n        if (res?.data?.isSuccess) {\n            this.setState({orderList: res?.data?.data});\n        }\n    }\n\n    updateStatus = async (orderId, type) => {\n        let res = await putData(UPDATE_ORDER, {\n            \"_id\": orderId,\n            \"orderStatus\": type\n        });\n\n        if (res?.data?.isSuccess) {\n            this.getOrderList(this.state.pageValue);\n            toast.success('Order Update Successfully');\n        } else {\n            toast.error(\"Something went wrong!\");\n        }\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <div className=\"order\">\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <h3>Orders</h3>\n                    </div>\n                    <div className=\"col-6\">\n                        <div className=\"row d-none\">\n                            <div className=\"col-6\">\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className=\"form-control input-default \"\n                                        placeholder=\"Quick Search by ID\"/>\n                                </div>\n                            </div>\n                            <div className=\"col-6\">\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\">\n                                        <option>Status</option>\n                                        <option>Option 2</option>\n                                        <option>Option 3</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"card\">\n                            {/* <div className=\"card-header\">\n                                <h4 className=\"card-title\">Recent Payments Queue</h4>\n                            </div> */}\n                            <div className=\"card-body\">\n                                <div className=\"table-responsive\">\n                                    <table className=\"table table-responsive-md\">\n                                        <thead>\n                                            <tr>\n                                                {/* <th><strong>Order</strong></th> */}\n                                                <th><strong>Customer</strong></th>\n                                                <th><strong>Purchased</strong></th>\n                                                <th><strong>DATE</strong></th>\n                                                <th><strong>STATUS</strong></th>\n                                                <th><strong>PRICE</strong></th>\n                                                <th></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                this.state?.orderList?.length ? \n                                                this.state.orderList.map(list => {\n                                                    return <Fragment>\n                                                        <tr key={list._id}>\n                                                            {/* <td><strong>01</strong></td> */}\n                                                            <td>{list?.user?.name}</td>\n                                                            <td>{list?.products?.length} Items</td>\n                                                            <td>{dateFormat(list.creatingDate)}</td>\n                                                            <td>\n                                                                <span className={`badge light ${list.orderStatus === 'PENDING' ? 'badge-warning' : list.orderStatus === 'CANCLED' ? 'badge-danger' : 'badge-success'}`}>{list.orderStatus}</span>\n                                                            </td>\n                                                            <td>$21.56</td>\n                                                            <td>\n                                                                <div className=\"dropdown\">\n                                                                    <button type=\"button\" className=\"btn btn-success light sharp\" data-toggle=\"dropdown\">\n                                                                         <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" version=\"1.1\"><g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect x=\"0\" y=\"0\" width=\"24\" height=\"24\"/><circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\"/><circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\"/><circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\"/></g></svg>\n                                                                    </button>\n                                                                    <div className=\"dropdown-menu\">\n                                                                        {/* <a className=\"dropdown-item\">View</a> */}\n                                                                        <a className=\"dropdown-item\" onClick={() => {this.updateStatus(list._id, 'DELIVERD')}}>DELIVERD</a>\n                                                                        <a className=\"dropdown-item\" onClick={() => {this.updateStatus(list._id, 'CANCEL')}}>CANCEL</a>\n                                                                        <a className=\"dropdown-item\" onClick={() => {this.updateStatus(list._id, 'PENDING')}}>PENDING</a>\n                                                                    </div>\n                                                                </div>\n                                                            </td>\n                                                        </tr>\n                                                    </Fragment>\n                                                }) : \"NO Order Found\"\n                                            }\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </Fragment>\n        )\n    }\n}\n","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/Brand.js",["236","237"],"import React, {Fragment, useState, useEffect} from 'react';\nimport {Link} from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport $ from \"jquery\";\nimport { useParams } from 'react-router-dom';\n\nimport { postData, getData, putData } from \"../../../scripts/api-service\";\nimport { CREATE_CATEGORY_BRAND, GET_CATEGORY_LIST, GET_CATEGORY_BRAND, UPDATE_BRAND } from \"../../../scripts/api\";\nimport { dateFormat } from \"../../../scripts/helper\";\nimport Pagination from \"../common/Pagination\";\n\nexport default function Brand() {\n    const [categorie, setCategories] = useState([]);\n    const [brands, setBarnds] = useState([]);\n    const [brandName, setBrandName] = useState();\n    const { categoryId } = useParams();\n    const [updateBrand, setUpdateBrand] = useState();\n    const [updateBrandName, setUpdateBrandName] = useState()\n\n    useEffect(() => {\n        if (categoryId) {\n            getCategorie();\n            getCategoryBrand();\n        }\n    }, []);\n\n    const getCategorie = async () => {\n        let res = await getData(GET_CATEGORY_LIST+ '?_id=' + categoryId);\n\n        if (res?.data?.isSuccess) {\n            setCategories(res?.data?.data[0]);\n        } else {\n            toast(\"Something went wrong\");\n        }\n    };\n\n    const getCategoryBrand = async (page) => {\n        // let res = await getData(GET_CATEGORY_BRAND + '?category=' + categoryId);\n\n        let query = page ? GET_CATEGORY_BRAND + '?category=' + categoryId + '&page='+ page : GET_CATEGORY_BRAND + '?category=' + categoryId;\n        let res = await getData(query);\n\n\n        if (res?.data?.isSuccess) {\n            setBarnds(res.data.data);\n        } else {\n            toast(\"Something went wrong\");\n        }\n    }\n\n    const changeHandeler = (e) => {\n        let value = e.target.value;\n        setBrandName(value);\n    }\n\n    const addBrand = async (e) => {\n        if (brandName && categoryId) {\n            let body = {\n                name: brandName,\n                category: categoryId\n            };\n\n\n            let res = await postData(CREATE_CATEGORY_BRAND, body);\n\n            if (res?.data?.isSuccess) {\n                toast.success(\"Brand Add successfully\");\n                $(\"#create-featured-modal\").modal('hide');\n                setBrandName(\"\");\n                getCategoryBrand();\n            } else {\n                toast.error(\"Something went wrong\");\n            }\n        } else {\n            toast(\"Something went wrong\");\n        }\n    }\n\n    const updateBrandContent = (data) => {\n        setUpdateBrand(data);\n        setUpdateBrandName(data.name);\n        $(\"#update-featured-modal\").modal('show');\n    }\n\n    const changeHandelerUpdate = (e) => {\n        setUpdateBrandName(e.target.value);\n    }\n\n    const editBrand = async () => {\n        if (updateBrandName) {\n            let res = await putData(UPDATE_BRAND, \n                {name: updateBrandName,\n                _id: updateBrand._id,\n                category: updateBrand.category\n            });\n\n            if (res?.data?.isSuccess) {\n                toast(\"Brand Update Successfully\");\n                $(\"#update-featured-modal\").modal('hide');\n                setUpdateBrand();\n                setUpdateBrandName();\n\n                getCategoryBrand();\n            } else {\n                toast(\"Something went wrong\");\n            }\n        } else {\n            toast(\"Category name is required\");\n        }\n    }\n\n    const handelPagination = (page) => {\n        getCategoryBrand(page);\n    }\n\n\n\n    return (\n        <Fragment>\n        <div className=\"brand\">\n            <div className=\"row\">\n            <div className=\"col-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h4 className=\"card-title\">Category <span className=\"text-info\">{categorie.name}</span> Brands</h4>\n                            <button type=\"button\" className=\"btn light btn-success\" data-toggle=\"modal\" data-target=\"#create-featured-modal\">\n                                <i className=\"fa fa-plus mr-2\"></i> Add Brand\n                            </button>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"table-responsive\">\n                                {\n                                    brands?.length ? <table className=\"table table-responsive-md\">\n                                        <thead>\n                                            <tr>\n                                                <th><strong>NAME</strong></th>\n                                                <th><strong>Date</strong></th>\n                                                <th><strong>Status</strong></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                brands.map((brand) => {\n                                                    return (\n                                                    <tr key={brand._id}>\n                                                        <td>{brand.name}</td>\n                                                        <td>{dateFormat(brand.creatingDate)}</td>\n                                                        <td>{brand.status ? 'Active' : \"Inactive\"}</td>\n                                                        <td>\n                                                            <div className=\"d-flex\">\n                                                                <Link to={`/admin/sub-category/${brand.category}/${brand._id}`} className=\"btn btn-dark shadow btn-xs sharp mr-1\"><i className=\"fa fa-eye\"></i></Link>\n                                                                <a onClick={() => updateBrandContent(brand)} className=\"btn btn-primary shadow btn-xs sharp mr-1\"><i className=\"fa fa-pencil\"></i></a>\n                                                                {/* <a href=\"#\" className=\"btn btn-danger shadow btn-xs sharp\"><i className=\"fa fa-trash\"></i></a> */}\n                                                            </div>\n                                                        </td>\n                                                    </tr>)\n                                                })\n                                            }\n                                        </tbody>\n                                    </table> : <h3>No Data found</h3>\n                                }\n                                \n                            </div>\n\n                            <Pagination\n                                    handelPagination={handelPagination}\n                            ></Pagination>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"create-featured-modal\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Add Brand from {categorie.name}</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\"><span>&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className=\"form-group\">\n                            <label>Brand Name</label>\n                            <input type=\"text\" onChange={changeHandeler} value={brandName}\n                                name=\"brandName\" className=\"form-control\"/>\n                        </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-danger light\" data-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={() => addBrand()}>Save</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"update-featured-modal\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Update Brand from {categorie.name}</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\"><span>&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className=\"form-group\">\n                            <label>Brand Name</label>\n                            <input type=\"text\" onChange={changeHandelerUpdate} value={updateBrandName}\n                                name=\"brandName\" className=\"form-control\"/>\n                        </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-danger light\" data-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={() => editBrand()}>Update</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </Fragment>\n    )\n}\n","/home/tushar/Documents/react/e-bazar/src/pages/Private/common/Pagination.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/NonBrandItems.js",["238"],"/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/ProductEdit.js",["239","240","241","242","243","244","245","246","247","248","249","250","251","252"],"import React, { Component, Fragment } from 'react';\nimport { putData, postData, getData } from \"../../../scripts/api-service\";\nimport { GET_RPODUCT, \n        GET_CATEGORY_LIST, \n        GET_CATEGORY_BRAND, \n        GET_CATEGORY_BRAND_SUB_CATEGORY,\n        UPDATE_PRODUCT,\n        UPLOAD_RPODUCT_IMAGE,\n        REMOVE_PRODUCT_PHOTO } from \"../../../scripts/api\";\n\nimport { toast } from 'react-toastify';\nimport demoProduct from \"../../../assets/images/demo-product.png\";\n\nexport default class ProductEdit extends Component {\n    formData = {\n        \"name\": \"\",\n        \"regularPrice\": 0,\n        \"sellPrice\": 0,\n        \"stock\": 0,\n        \"sku\": 0,\n        \"category\": \"\",\n        \"categoryBrand\": \"\",\n        \"categoryBrandSubCategory\": \"\",\n        \"discountPrice\": 0,\n        \"isFlushSell\": false,\n        \"isSlideProduct\": false,\n        \"isBundleProduct\": false,\n        \"productDetails\": \"\"\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            productId: props?.match?.params?.productId,\n            productInfo: null,\n            categoryList: [],\n            brandList: [],\n            subCategoryList: [],\n            formData: this.formDatam,\n            productImages: []\n        };\n    }\n\n    componentDidMount() {\n        this.getProductInfo();\n        this.getCategoryList();\n    }\n\n    getCategoryList = async () => {\n        let res = await getData(GET_CATEGORY_LIST);\n\n        if (res?.data?.isSuccess) {\n            this.setState({categoryList: res?.data?.data});\n        }\n    }\n\n    selectCategory = (e) => {\n        this.setState({selectedCategory: e.target.value});\n        this.getBrandList(e.target.value);\n    };\n\n    getBrandList = async (categoryId) => {\n        let res = await getData(GET_CATEGORY_BRAND + '?category=' + categoryId);\n\n        if (res?.data?.isSuccess) {\n            this.setState({brandList: res.data.data});\n        }\n    }\n\n    selectBrand = (e) => {\n        this.setState({selectedBrand: e.target.value});\n        this.getSubCategoryList(e.target.value);\n    }\n\n    getSubCategoryList = async (brandId) => {\n        let res = await getData(GET_CATEGORY_BRAND_SUB_CATEGORY + '?categoryBrand=' + brandId);\n\n        if (res?.data?.isSuccess) {\n            this.setState({subCategoryList: res?.data?.data})\n        }\n    }\n\n    selectSubCategory = (e) => {\n        this.setState({selectedSubCategory: e.target.value});\n    }\n\n    getProductInfo = async () => {\n        let url = GET_RPODUCT + '?_id='+ this.state.productId ;\n        let res = await getData(url);\n\n        if (res?.data?.isSuccess) {\n            let masterData = res?.data?.data[0]\n            this.setState({productInfo: masterData});\n\n            console.log(\"masterData\", masterData);\n\n            this.setState({\n                formData: {\n                  ...this.state.formData,\n                  [\"name\"]: masterData.name,\n                  [\"regularPrice\"]: masterData.regularPrice,\n                  [\"sellPrice\"]: masterData.sellPrice,\n                  [\"stock\"]: masterData.stock,\n                  [\"sku\"]: masterData.sku,\n                  [\"category\"]: masterData.category,\n                  [\"categoryBrand\"]: masterData.categoryBrand,\n                  [\"categoryBrandSubCategory\"]: masterData.categoryBrandSubCategory,\n                  [\"discountPrice\"]: masterData.discountPrice,\n                  [\"isFlushSell\"]: masterData.isFlushSell,\n                  [\"isSlideProduct\"]: masterData.isSlideProduct,\n                  [\"isBundleProduct\"]: masterData.isBundleProduct,\n                  [\"productDetails\"]: masterData.productDetails,\n                },\n            });\n\n            this.setState({productImages: masterData.photos});\n        }\n    } \n\n    changeHandeler = (e) => {\n        this.setState({\n            formData: {\n                ...this.state.formData,\n                [e.target.name]: e.target.value,\n            },\n        });\n    }\n\n    updateProduct = async () => {\n        let data = this.state.formData;\n        data._id = this.state.productId;\n\n        let res = await putData(UPDATE_PRODUCT, data);\n\n        console.log(\"res\", res);\n\n        if (res.data.isSuccess) {\n            toast.success('Product update successfully')\n        } else {\n            toast.error(res.msg);\n        }\n    };\n\n    selectImage = async (e) => {\n        let instance = this;\n        let element = e.target;\n        var file = element.files[0];\n\n        let data = new FormData();\n        data.append(\"_id\", this.state.productId);\n        data.append('photos', file);\n\n        let res = await postData(UPLOAD_RPODUCT_IMAGE, data);\n\n        if (res?.data?.isSuccess) {\n            toast.success(\"Product Image Upload Successfully\");\n            this.getProductInfo();\n        }\n    }\n\n    removeImage = async (photoId, index) => {\n        let photo = this.state.productImages.filter(e => e !== photoId);\n        let data = {\n            _id: this.state.productId,\n            photos: photo\n        }\n\n        let res = await postData(REMOVE_PRODUCT_PHOTO, data);\n\n        if (res?.data?.isSuccess) {\n            toast.success(\"Product Image Remove Successfully\");\n            this.getProductInfo();\n        } else if (res.msg) {\n            toast.error(res.msg);   \n        }\n    } \n\n\n    render() {\n        const baseurl = \"http://easyexpress24.com:5000/static/\";\n        \n        return (\n            <div className=\"add-product\">\n                <h3>Add Products</h3>\n\n                <div className=\"card mt-3\">\n                    <div className=\"card-body\">\n                        <div className=\"row\">\n                            <Fragment>\n                                <div className=\"form-group col-12\">\n                                    <label>Product Name</label>\n                                    <input type=\"text\" className=\"form-control\" value={this.state?.formData?.name}\n                                        name=\"name\" onChange={this.changeHandeler}/>\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <label>Regular Price</label>\n                                    <input type=\"text\" className=\"form-control\" value={this.state?.formData?.regularPrice}\n                                        name=\"regularPrice\" onChange={this.changeHandeler} />\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <label>Sell Price</label>\n                                    <input type=\"text\" className=\"form-control\" value={this.state?.formData?.sellPrice}\n                                        name=\"sellPrice\" onChange={this.changeHandeler}/>\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <label>Stock</label>\n                                    <input type=\"text\" className=\"form-control\" value={this.state?.formData?.stock}\n                                        name=\"stock\" onChange={this.changeHandeler} />\n                                </div>\n                                \n                                <div className=\"form-group col-6\">\n                                    <label>SKU (Stock keeping unit)</label>\n                                    <input type=\"text\" className=\"form-control\" value={this.state?.formData?.sku}\n                                        name=\"sku\" onChange={this.changeHandeler}/>\n                                </div>\n                                \n                                <div className=\"form-group col-6\">\n                                    <label>Discount Price</label>\n                                    <input type=\"text\" className=\"form-control\" value={this.state?.formData?.discountPrice}\n                                        name=\"discountPrice\" onChange={this.changeHandeler}/>\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <label>Category</label>\n                                    <select class=\"custom-select\" name=\"category\" value={this.state?.formData?.category} onChange={this.selectCategory}>\n                                        <option value=\"\">Select Category</option>\n                                        {\n                                            this.state.categoryList?.length ? (\n                                                this.state.categoryList.map(item => {\n                                                    return <Fragment key={item._id}>\n                                                            <option value={item._id}>{item.name}</option>\n                                                        </Fragment>\n                                                })\n                                            ) : \"No Data Found\"\n                                        }\n                                        \n                                    </select>\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <label>Brand</label>\n                                    <select class=\"custom-select\" name=\"categoryBrand\" \n                                        value={this.state.formData?.categoryBrand} onChange={this.selectBrand}>\n                                        <option value=\"\">Select Brand</option>\n                                        {\n                                            this.state.brandList?.length ? (\n                                                this.state.brandList.map(item => {\n                                                    return <Fragment key={item._id}>\n                                                            <option value={item._id}>{item.name}</option>\n                                                        </Fragment>\n                                                })\n                                            ) : \"No Data Found\"\n                                        }\n                                    </select>\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <label>Sub-Category</label>\n                                    <select class=\"custom-select\" value={this.state.formData?.categoryBrandSubCategory} \n                                        name=\"categoryBrandSubCategory\" onChange={this.selectSubCategory}>\n                                        <option value=\"\">Select Sub-Category</option>\n                                        {\n                                            this.state.subCategoryList?.length ? (\n                                                this.state.subCategoryList.map(item => {\n                                                    return <Fragment key={item._id}>\n                                                            <option value={item._id}>{item.name}</option>\n                                                        </Fragment>\n                                                })\n                                            ) : \"No Data Found\"\n                                        }\n                                    </select>\n                                </div>\n                                \n                                <div className=\"form-group col-6\">\n                                    <label>Slider</label>\n                                    <select class=\"custom-select\" value={this.state.formData?.isSlideProduct}\n                                        name=\"isSlideProduct\" onChange={this.changeHandeler}>\n                                        <option value=\"false\">NO</option>\n                                        <option value=\"true\">Yes</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group col-6\">\n                                    <label>Flash Sall</label>\n                                    <select class=\"custom-select\" value={this.state.formData?.isFlushSell}\n                                        name=\"isFlushSell\" onChange={this.changeHandeler}>\n                                        <option value=\"false\">NO</option>\n                                        <option value=\"true\">Yes</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group col-6\">\n                                    <label>Bundle Offer</label>\n                                    <select class=\"custom-select\" value={this.state.formData?.isBundleProduct}\n                                        name=\"isBundleProduct\" onChange={this.changeHandeler}>\n                                        <option value=\"false\">NO</option>\n                                        <option value=\"true\">Yes</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group col-6\">\n                                    <label>Product Details</label>\n                                    <input type=\"text\" className=\"form-control\" value={this.state.formData?.productDetails}\n                                        name=\"productDetails\" onChange={this.changeHandeler}/>\n                                </div>\n\n                                <div className=\"form-group col-12 text-right\">\n                                    <button type=\"button\" className=\"btn btn-square btn-outline-primary\"  \n                                        onClick={this.updateProduct}>Update Product Info</button>\n                                </div>\n                            </Fragment>\n                        </div>\n\n                        <hr/>\n\n                        <div className=\"product-images\">\n                            <div className=\"row\">\n                                {/* img 1 */}\n                                <div className=\"form-group col-6\">\n                                    <label>Image</label>\n                                    {\n                                        !this.state?.productImages[0] ? <input type=\"file\" id=\"js-product-img-0\" data-content=\"1\" className=\"form-control\" \n                                            onChange={this.selectImage} accept=\"image/x-png, image/gif, image/jpeg\" /> : ''\n                                    }\n                                </div>\n\n                                <div className=\"col-6\">\n                                    <img className=\"img-thumbnail\" id=\"js-product-img-view-1\" \n                                        src={this.state?.productImages[0] ? baseurl+this.state?.productImages[0] : demoProduct}\n                                        height=\"200\" width=\"200\"  alt=\"\" />\n                                    {\n                                        this.state?.productImages[0] ? <button type=\"button\" className=\"btn btn-danger ml-3\" \n                                            onClick={() => this.removeImage(this.state.productImages[0], 0)}>Remove Image</button> : \"\"\n                                    }\n                                </div>\n                            </div>\n\n                            <hr/>\n                            \n                            <div className=\"row\">\n                                {/* img 2 */}\n                                <div className=\"form-group col-6\">\n                                    <label>Image</label>\n                                    {\n                                        !this.state?.productImages[1] ? <input type=\"file\" id=\"js-product-img-1\" data-content=\"1\" className=\"form-control\" \n                                            onChange={this.selectImage} accept=\"image/x-png, image/gif, image/jpeg\" /> : ''\n                                    }\n                                </div>\n\n                                <div className=\"col-6\">\n                                    <img className=\"img-thumbnail\" id=\"js-product-img-view-1\" \n                                    src={this.state?.productImages[1] ? baseurl+this.state?.productImages[1] : demoProduct}\n                                    height=\"200\" width=\"200\" alt=\"\" />\n                                    {\n                                        this.state?.productImages[1] ? <button type=\"button\" className=\"btn btn-danger ml-3\" \n                                            onClick={() => this.removeImage(this.state.productImages[1], 1)}>Remove Image</button> : \"\"\n                                    }\n                                </div>\n                            </div>\n\n                            <hr/>\n\n                            <div className=\"row\">\n                                {/* img 3  */}\n                                <div className=\"form-group col-6\">\n                                    <label>Image</label>\n                                    {\n                                        !this.state?.productImages[2] ? <input type=\"file\" id=\"js-product-img-2\" data-content=\"1\" className=\"form-control\" \n                                            onChange={this.selectImage} accept=\"image/x-png, image/gif, image/jpeg\" /> : ''\n                                    }\n                                </div>\n\n                                <div className=\"col-6\">\n                                    <img className=\"img-thumbnail\" id=\"js-product-img-view-1\" \n                                    height=\"200\" width=\"200\" alt=\"\" \n                                    src={this.state?.productImages[2] ? baseurl+this.state?.productImages[2] : demoProduct}/>\n                                    {\n                                        this.state?.productImages[2] ? <button type=\"button\" className=\"btn btn-danger ml-3\" \n                                            onClick={() => this.removeImage(this.state.productImages[2], 2)}>Remove Image</button> : \"\"\n                                    }\n                                </div>\n                            </div>\n\n                            <hr/>\n\n                            <div className=\"row\">\n                                {/* img 4 */}\n                                <div className=\"form-group col-6\">\n                                    <label>Image</label>\n                                    {\n                                        !this.state?.productImages[3] ? <input type=\"file\" id=\"js-product-img-3\" data-content=\"1\" className=\"form-control\" \n                                            onChange={this.selectImage} accept=\"image/x-png, image/gif, image/jpeg\" /> : ''\n                                    }\n                                </div>\n\n                                <div className=\"col-6\">\n                                    <img className=\"img-thumbnail\" id=\"js-product-img-view-1\" \n                                        height=\"200\" width=\"200\" alt=\"\"\n                                        src={this.state?.productImages[3] ? baseurl+this.state?.productImages[3] : demoProduct} />\n                                    {\n                                        this.state?.productImages[3] ? <button type=\"button\" className=\"btn btn-danger ml-3\" \n                                            onClick={() => this.removeImage(this.state.productImages[3], 3)}>Remove Image</button> : \"\"\n                                    }\n                                </div>\n                            </div>\n\n                            <hr/>\n\n                            <div className=\"row\">\n                                {/* img 5  */}\n                                <div className=\"form-group col-6\">\n                                    <label>Image</label>\n                                    {\n                                        !this.state?.productImages[4] ? <input type=\"file\" id=\"js-product-img-4\" data-content=\"4\" className=\"form-control\" \n                                            onChange={this.selectImage} accept=\"image/x-png, image/gif, image/jpeg\" /> : ''\n                                    }\n                                </div>\n\n                                <div className=\"col-6\">\n                                    <img className=\"img-thumbnail\" id=\"js-product-img-view-1\" \n                                        height=\"200\" width=\"200\" alt=\"\" \n                                        src={this.state?.productImages[4] ? baseurl+this.state?.productImages[4] : demoProduct}/>\n                                    {\n                                        this.state?.productImages[4] ? <button type=\"button\" className=\"btn btn-danger ml-3\" \n                                            onClick={() => this.removeImage(this.state.productImages[4], 4)}>Remove Image</button> : \"\"\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","/home/tushar/Documents/react/e-bazar/src/scripts/api.js",[],"/home/tushar/Documents/react/e-bazar/src/router/auth-route.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Components/Common/QuantityInput.js",["253","254"],"import React, {useState} from 'react'\n\nexport default function QuantityInput(props) {\n    const {total, productId, handelQuantuty} = props;\n\n    const [value, setValue] = useState(total);\n    const [minValue, setMinValue] = useState(0);\n    const [maxValue, setMaxValue] = useState(10);\n\n    const decriesValue = () => {\n        if (value > minValue) {\n            setValue(value -1);\n            handelQuantuty({qun: value - 1, productId: productId});\n        }\n    }\n\n    const incriseValue = () => {\n        if (value < maxValue) {\n            setValue(value + 1);\n            handelQuantuty({qun: value + 1, productId: productId});\n        }\n    }\n\n    return (\n        <div className=\"qty-input\">\n            <button className=\"qty-count qty-count--minus\" data-action=\"minus\" type=\"button\" onClick={decriesValue}\n                disabled={minValue >= value ? 1 : 0 }>-</button>\n            <input className=\"product-qty\" type=\"number\" name=\"product-qty\" \n                min={minValue} max={maxValue} value={value}/>\n            <button className=\"qty-count qty-count--add\" data-action=\"add\" onClick={incriseValue} type=\"button\"\n                disabled={maxValue <= value ? 1 : 0 }>+</button>\n        </div>\n    )\n}\n","/home/tushar/Documents/react/e-bazar/src/pages/Public/Landing/TopSlider.js",[],"/home/tushar/Documents/react/e-bazar/src/pages/Private/common/Sidebar.js",["255"],"/home/tushar/Documents/react/e-bazar/src/pages/Public/Product-List.js",["256","257"],"import React, {Fragment, useEffect, useState} from 'react';\nimport $ from \"jquery\";\nimport {Link,useHistory} from \"react-router-dom\";\nimport { getData } from \"../../scripts/api-service\";\nimport { GET_RPODUCT } from \"../../scripts/api\";\nimport demoProduct from \"../../assets/images/demo-product.png\";\nimport ProductModalView from \"../Components/Common/ProductModalView\";\nimport Pagination from \"../Private/common/Pagination\";\nimport Localbase from 'localbase';\nlet db = new Localbase('db');\n\nexport default function ProductList(props) {\n    const {location} = props;\n    const {search} = location;\n    const [products, setProducts] = useState([]);\n    const history = useHistory();\n    \n    \n    useEffect(() => {\n        getProducts(search)\n    }, [search]);\n\n    const getProducts = async (query) => {\n        let url = query ? GET_RPODUCT + query : GET_RPODUCT;\n        let res = await getData(url);\n\n        if (res?.data?.isSuccess) {\n            setProducts(res?.data?.data);\n        }\n    }\n\n    const handelPagination = (page) => {\n        let {location} = history,\n            {search} = location;\n\n        let query = search ? search + `&page=${page}` : `?page=${page}`;\n        getProducts(query);\n    }\n\n    return (\n        <div className=\"home-landing\">\n            <div className=\"non-Brand-items card\">\n                <div className=\"card-body\">\n                    <div className=\"row\">\n                        {   \n                            products.length ? \n                            products.map(product => {\n                                return <div className=\"col-12 col-sm-6 col-md-6 col-lg-6 col-xl-3\" key={product._id}>\n                                        <ProductCard product={product}></ProductCard>\n                                    </div>\n                            }) : <h3>No Product Found</h3>\n                        }\n                    </div>\n                    <Pagination\n                        handelPagination={handelPagination}\n                    ></Pagination>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction ProductCard( {product}) {\n    const [isOpen, setIsOpen] = useState(false);\n    const [update, setUpdate] = useState(Math.random());\n \n    const openModal = (productId) => {\n        $(`#product-view-modal-${productId}`).modal(\"show\");\n        setIsOpen(true);\n    }\n\n    const handelModalClose = () => {\n        \n    }\n\n    const addProductIncard = (item) => {\n        db.collection('products').doc({ _id: item._id }).get().then(doc => {\n            if (doc) {\n                db.collection('products').doc({ _id: item._id  }).update({\n                    total: doc.total + 1 \n                });\n            } else {\n                item.total = 1;\n                db.collection('products').add(item);\n            }\n\n            setUpdate(Math.random());\n        });\n    }\n\n    return (\n        <Fragment>\n            <div className=\"product-card\">\n                {\n                    !(product.stock - product.totalSell) ? \n                    <div className=\"badge\">Out of Stock</div> : ''\n                }\n                <div className=\"product-tumb\">\n                    {\n                        product?.photos?.length ? <Fragment>\n                            <img src={`http://easyexpress24.com:5000/static/${product?.photos[0]}`} alt=\"\"/>\n                        </Fragment> : <Fragment>\n                            <img src={demoProduct} alt=\"\"/>\n                        </Fragment>\n                    }\n                </div>\n                <div className=\"product-details\">\n                    <span className=\"product-catagory\">Women,bag</span>\n                    <h5><a href=\"\">{product.name}</a></h5>\n                    <div className=\"product-bottom-details\">\n                        <div className=\"product-price\">\n                            {\n                                product.discountPrice ? <Fragment>\n                                    <small>৳{product.sellPrice}</small>\n                                    ৳{ product.sellPrice - product.discountPrice }\n                                </Fragment> : <Fragment>৳{product.sellPrice}</Fragment> \n                            }\n                        </div>\n                        <div className=\"product-links\">\n                            <span className=\"cursor-pointer\" onClick={()=> openModal(product._id)}>\n                                <i className=\"fa fa-eye\"></i>\n                            </span>\n                            <span className=\"cursor-pointer\" onClick={() => addProductIncard(product)}>\n                                <i className=\"fa fa-shopping-cart\"></i>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <ProductModalView\n                productId={product._id} \n                isOpen={isOpen}\n                product={product}\n                update={update}\n                HandelModalClose={handelModalClose}>\n            </ProductModalView>\n        </Fragment>\n        \n    )\n}\n","/home/tushar/Documents/react/e-bazar/src/pages/Auth/SignIn.js",["258"],"import React, { Component,Fragment } from 'react';\nimport Cookies from \"js-cookie\";\nimport { toast } from 'react-toastify';\n\nimport { LOGIN } from \"../../scripts/api\";\nimport { checkRes } from \"../../scripts/checkRes\";\nimport { postData } from \"../../scripts/api-service\";\n\nexport default class SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            error: \"\"\n        };\n    }\n\n    changeHandeler = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n\n        this.setState({ [nam]: val });\n        this.setState({ error: \"\" });\n    }\n\n    loginSubmit = async (e) => {\n        e.preventDefault();\n\n        const {email, password} = this.state;\n\n        if (email && password) {\n\n            let signIn = {\n                email: email.trim(),\n                password: password\n            }\n\n            let res = await postData(LOGIN, signIn, \"no_token\");\n\n            if (res?.status && checkRes(res.status) && res.data.isSuccess) {\n                Cookies.set(\"expressToken\", res.data.data);\n                window.location = \"/\";\n\n            } else if(!res.data.isSuccess) {\n                this.setState({ error: res.data.msg });\n            }\n        } else if (!email) {\n            this.setState({error: \"Email is required\"})\n        } else if (!password) {\n            this.setState({error: \"Password is required\"})\n        }\n\n        if (this.state.error) {\n            toast(this.state.error);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"register-content\">\n                <div className=\"sign-heading\">\n                    <h2>Login</h2>\n                    <p>Use credentials to access your account.</p>\n                </div>\n                <form className=\"form\" onSubmit={this.loginSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlInput1\">Email address</label>\n                        <input type=\"email\" className=\"form-control\" name=\"email\"\n                            onChange={this.changeHandeler}  placeholder=\"name@example.com\"/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputPassword1\">Password</label>\n                        <input type=\"password\" className=\"form-control\" name=\"password\" \n                            onChange={this.changeHandeler} placeholder=\"Password\"/>\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-outline-success\">SIGN IN NOW</button>\n                </form>\n\n                <div className=\"form-bottom\">\n                    <p>Don't have an account? click on the <span onClick={() => this.props.handelSetShowPage(\"signup\")}>( sign up )</span> button above.</p>\n                </div>\n            </div>\n        )\n    }\n}\n","/home/tushar/Documents/react/e-bazar/src/pages/Private/pages/SubCategory.js",["259","260"],{"ruleId":"261","severity":1,"message":"262","line":17,"column":9,"nodeType":"263","messageId":"264","endLine":17,"endColumn":17},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"265","replacedBy":"269"},{"ruleId":"267","replacedBy":"270"},{"ruleId":"265","replacedBy":"271"},{"ruleId":"267","replacedBy":"272"},{"ruleId":"261","severity":1,"message":"273","line":2,"column":9,"nodeType":"263","messageId":"264","endLine":2,"endColumn":13},{"ruleId":"274","severity":1,"message":"275","line":58,"column":8,"nodeType":"276","endLine":58,"endColumn":21,"suggestions":"277"},{"ruleId":"278","severity":1,"message":"279","line":92,"column":13,"nodeType":"280","endLine":93,"endColumn":64},{"ruleId":"281","severity":1,"message":"282","line":93,"column":22,"nodeType":"283","messageId":"284","endLine":93,"endColumn":41},{"ruleId":"285","severity":1,"message":"286","line":98,"column":13,"nodeType":"280","endLine":98,"endColumn":91},{"ruleId":"261","severity":1,"message":"287","line":138,"column":13,"nodeType":"263","messageId":"264","endLine":138,"endColumn":18},{"ruleId":"261","severity":1,"message":"287","line":146,"column":13,"nodeType":"263","messageId":"264","endLine":146,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":152,"column":13,"nodeType":"280","endLine":153,"endColumn":64},{"ruleId":"281","severity":1,"message":"282","line":153,"column":22,"nodeType":"283","messageId":"284","endLine":153,"endColumn":41},{"ruleId":"285","severity":1,"message":"286","line":157,"column":21,"nodeType":"280","endLine":157,"endColumn":99},{"ruleId":"278","severity":1,"message":"288","line":163,"column":45,"nodeType":"280","endLine":163,"endColumn":86},{"ruleId":"265","replacedBy":"289"},{"ruleId":"267","replacedBy":"290"},{"ruleId":"261","severity":1,"message":"291","line":4,"column":8,"nodeType":"263","messageId":"264","endLine":4,"endColumn":15},{"ruleId":"261","severity":1,"message":"292","line":13,"column":37,"nodeType":"263","messageId":"264","endLine":13,"endColumn":43},{"ruleId":"261","severity":1,"message":"293","line":3,"column":10,"nodeType":"263","messageId":"264","endLine":3,"endColumn":15},{"ruleId":"261","severity":1,"message":"294","line":5,"column":10,"nodeType":"263","messageId":"264","endLine":5,"endColumn":18},{"ruleId":"261","severity":1,"message":"295","line":52,"column":11,"nodeType":"263","messageId":"264","endLine":52,"endColumn":25},{"ruleId":"278","severity":1,"message":"288","line":147,"column":65,"nodeType":"280","endLine":147,"endColumn":169},{"ruleId":"296","severity":1,"message":"297","line":80,"column":17,"nodeType":"298","messageId":"299","endLine":80,"endColumn":38,"fix":"300"},{"ruleId":"301","severity":1,"message":"302","line":144,"column":41,"nodeType":"280","endLine":145,"endColumn":166},{"ruleId":"265","replacedBy":"303"},{"ruleId":"267","replacedBy":"304"},{"ruleId":"305","severity":1,"message":"306","line":9,"column":101,"nodeType":"283","messageId":"307","endLine":9,"endColumn":102,"suggestions":"308"},{"ruleId":"305","severity":1,"message":"309","line":9,"column":103,"nodeType":"283","messageId":"307","endLine":9,"endColumn":104,"suggestions":"310"},{"ruleId":"305","severity":1,"message":"311","line":9,"column":105,"nodeType":"283","messageId":"307","endLine":9,"endColumn":106,"suggestions":"312"},{"ruleId":"261","severity":1,"message":"313","line":14,"column":12,"nodeType":"263","messageId":"264","endLine":14,"endColumn":16},{"ruleId":"261","severity":1,"message":"314","line":14,"column":18,"nodeType":"263","messageId":"264","endLine":14,"endColumn":25},{"ruleId":"278","severity":1,"message":"279","line":106,"column":25,"nodeType":"280","endLine":106,"endColumn":36},{"ruleId":"265","replacedBy":"315"},{"ruleId":"267","replacedBy":"316"},{"ruleId":"261","severity":1,"message":"317","line":2,"column":10,"nodeType":"263","messageId":"264","endLine":2,"endColumn":18},{"ruleId":"261","severity":1,"message":"318","line":10,"column":5,"nodeType":"263","messageId":"264","endLine":10,"endColumn":14},{"ruleId":"261","severity":1,"message":"319","line":12,"column":5,"nodeType":"263","messageId":"264","endLine":12,"endColumn":24},{"ruleId":"261","severity":1,"message":"320","line":13,"column":5,"nodeType":"263","messageId":"264","endLine":13,"endColumn":30},{"ruleId":"261","severity":1,"message":"321","line":14,"column":5,"nodeType":"263","messageId":"264","endLine":14,"endColumn":21},{"ruleId":"261","severity":1,"message":"322","line":15,"column":5,"nodeType":"263","messageId":"264","endLine":15,"endColumn":21},{"ruleId":"261","severity":1,"message":"323","line":23,"column":40,"nodeType":"263","messageId":"264","endLine":23,"endColumn":56},{"ruleId":"274","severity":1,"message":"324","line":36,"column":10,"nodeType":"276","endLine":36,"endColumn":18,"suggestions":"325"},{"ruleId":"301","severity":1,"message":"302","line":70,"column":53,"nodeType":"280","endLine":70,"endColumn":112},{"ruleId":"261","severity":1,"message":"326","line":16,"column":5,"nodeType":"263","messageId":"264","endLine":16,"endColumn":7},{"ruleId":"261","severity":1,"message":"327","line":13,"column":12,"nodeType":"263","messageId":"264","endLine":13,"endColumn":17},{"ruleId":"278","severity":1,"message":"279","line":70,"column":37,"nodeType":"280","endLine":70,"endColumn":124},{"ruleId":"281","severity":1,"message":"282","line":70,"column":66,"nodeType":"283","messageId":"284","endLine":70,"endColumn":86},{"ruleId":"261","severity":1,"message":"328","line":2,"column":8,"nodeType":"263","messageId":"264","endLine":2,"endColumn":9},{"ruleId":"261","severity":1,"message":"273","line":4,"column":9,"nodeType":"263","messageId":"264","endLine":4,"endColumn":13},{"ruleId":"261","severity":1,"message":"329","line":9,"column":8,"nodeType":"263","messageId":"264","endLine":9,"endColumn":18},{"ruleId":"278","severity":1,"message":"288","line":119,"column":73,"nodeType":"280","endLine":119,"endColumn":160},{"ruleId":"278","severity":1,"message":"288","line":120,"column":73,"nodeType":"280","endLine":120,"endColumn":158},{"ruleId":"278","severity":1,"message":"288","line":121,"column":73,"nodeType":"280","endLine":121,"endColumn":159},{"ruleId":"274","severity":1,"message":"330","line":25,"column":8,"nodeType":"276","endLine":25,"endColumn":10,"suggestions":"331"},{"ruleId":"278","severity":1,"message":"288","line":152,"column":65,"nodeType":"280","endLine":152,"endColumn":163},{"ruleId":"261","severity":1,"message":"326","line":6,"column":5,"nodeType":"263","messageId":"264","endLine":6,"endColumn":7},{"ruleId":"296","severity":1,"message":"332","line":100,"column":19,"nodeType":"298","messageId":"299","endLine":100,"endColumn":44,"fix":"333"},{"ruleId":"296","severity":1,"message":"334","line":101,"column":19,"nodeType":"298","messageId":"299","endLine":101,"endColumn":60,"fix":"335"},{"ruleId":"296","severity":1,"message":"336","line":102,"column":19,"nodeType":"298","messageId":"299","endLine":102,"endColumn":54,"fix":"337"},{"ruleId":"296","severity":1,"message":"338","line":103,"column":19,"nodeType":"298","messageId":"299","endLine":103,"endColumn":46,"fix":"339"},{"ruleId":"296","severity":1,"message":"340","line":104,"column":19,"nodeType":"298","messageId":"299","endLine":104,"endColumn":42,"fix":"341"},{"ruleId":"296","severity":1,"message":"342","line":105,"column":19,"nodeType":"298","messageId":"299","endLine":105,"endColumn":52,"fix":"343"},{"ruleId":"296","severity":1,"message":"344","line":106,"column":19,"nodeType":"298","messageId":"299","endLine":106,"endColumn":62,"fix":"345"},{"ruleId":"296","severity":1,"message":"346","line":107,"column":19,"nodeType":"298","messageId":"299","endLine":107,"endColumn":84,"fix":"347"},{"ruleId":"296","severity":1,"message":"348","line":108,"column":19,"nodeType":"298","messageId":"299","endLine":108,"endColumn":62,"fix":"349"},{"ruleId":"296","severity":1,"message":"350","line":109,"column":19,"nodeType":"298","messageId":"299","endLine":109,"endColumn":58,"fix":"351"},{"ruleId":"296","severity":1,"message":"352","line":110,"column":19,"nodeType":"298","messageId":"299","endLine":110,"endColumn":64,"fix":"353"},{"ruleId":"296","severity":1,"message":"354","line":111,"column":19,"nodeType":"298","messageId":"299","endLine":111,"endColumn":66,"fix":"355"},{"ruleId":"296","severity":1,"message":"356","line":112,"column":19,"nodeType":"298","messageId":"299","endLine":112,"endColumn":64,"fix":"357"},{"ruleId":"261","severity":1,"message":"358","line":145,"column":13,"nodeType":"263","messageId":"264","endLine":145,"endColumn":21},{"ruleId":"261","severity":1,"message":"359","line":7,"column":22,"nodeType":"263","messageId":"264","endLine":7,"endColumn":33},{"ruleId":"261","severity":1,"message":"360","line":8,"column":22,"nodeType":"263","messageId":"264","endLine":8,"endColumn":33},{"ruleId":"261","severity":1,"message":"361","line":1,"column":10,"nodeType":"263","messageId":"264","endLine":1,"endColumn":20},{"ruleId":"261","severity":1,"message":"273","line":3,"column":9,"nodeType":"263","messageId":"264","endLine":3,"endColumn":13},{"ruleId":"278","severity":1,"message":"279","line":109,"column":25,"nodeType":"280","endLine":109,"endColumn":36},{"ruleId":"261","severity":1,"message":"317","line":1,"column":27,"nodeType":"263","messageId":"264","endLine":1,"endColumn":35},{"ruleId":"274","severity":1,"message":"362","line":24,"column":8,"nodeType":"276","endLine":24,"endColumn":10,"suggestions":"363"},{"ruleId":"278","severity":1,"message":"288","line":143,"column":65,"nodeType":"280","endLine":143,"endColumn":161},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["364"],"no-negated-in-lhs",["365"],["364"],["365"],["364"],["365"],"'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'brand' and 'category'. Either include them or remove the dependency array.","ArrayExpression",["366"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","jsx-a11y/role-supports-aria-props","The attribute aria-expanded is not supported by the role list. This role is implicit on the element ul.","'query' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["364"],["365"],"'Cookies' is defined but never used.","'errors' is assigned a value but never used.","'toast' is defined but never used.","'postData' is defined but never used.","'deleteCategory' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"dateOfBirth\"] found.","Property","unnecessarilyComputedProperty",{"range":"367","text":"368"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["364"],["365"],"no-useless-escape","Unnecessary escape character: \\..","unnecessaryEscape",["369","370"],"Unnecessary escape character: \\+.",["371","372"],"Unnecessary escape character: \\*.",["373","374"],"'page' is assigned a value but never used.","'setpage' is assigned a value but never used.",["364"],["365"],"'Fragment' is defined but never used.","'Magnifier' is defined but never used.","'SideBySideMagnifier' is defined but never used.","'PictureInPictureMagnifier' is defined but never used.","'MOUSE_ACTIVATION' is defined but never used.","'TOUCH_ACTIVATION' is defined but never used.","'HandelModalClose' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'product.photos' and 'productId'. Either include them or remove the dependency array.",["375"],"'db' is assigned a value but never used.","'token' is assigned a value but never used.","'$' is defined but never used.","'Pagination' is defined but never used.","React Hook useEffect has missing dependencies: 'categoryId', 'getCategorie', and 'getCategoryBrand'. Either include them or remove the dependency array.",["376"],"Unnecessarily computed property [\"name\"] found.",{"range":"377","text":"378"},"Unnecessarily computed property [\"regularPrice\"] found.",{"range":"379","text":"380"},"Unnecessarily computed property [\"sellPrice\"] found.",{"range":"381","text":"382"},"Unnecessarily computed property [\"stock\"] found.",{"range":"383","text":"384"},"Unnecessarily computed property [\"sku\"] found.",{"range":"385","text":"386"},"Unnecessarily computed property [\"category\"] found.",{"range":"387","text":"388"},"Unnecessarily computed property [\"categoryBrand\"] found.",{"range":"389","text":"390"},"Unnecessarily computed property [\"categoryBrandSubCategory\"] found.",{"range":"391","text":"392"},"Unnecessarily computed property [\"discountPrice\"] found.",{"range":"393","text":"394"},"Unnecessarily computed property [\"isFlushSell\"] found.",{"range":"395","text":"396"},"Unnecessarily computed property [\"isSlideProduct\"] found.",{"range":"397","text":"398"},"Unnecessarily computed property [\"isBundleProduct\"] found.",{"range":"399","text":"400"},"Unnecessarily computed property [\"productDetails\"] found.",{"range":"401","text":"402"},"'instance' is assigned a value but never used.","'setMinValue' is assigned a value but never used.","'setMaxValue' is assigned a value but never used.","'localeData' is defined but never used.","React Hook useEffect has missing dependencies: 'brandId', 'getBrandInfo', and 'getSubBrandCategory'. Either include them or remove the dependency array.",["403"],"no-global-assign","no-unsafe-negation",{"desc":"404","fix":"405"},[2467,2482],"\"dateOfBirth\"",{"messageId":"406","fix":"407","desc":"408"},{"messageId":"409","fix":"410","desc":"411"},{"messageId":"406","fix":"412","desc":"408"},{"messageId":"409","fix":"413","desc":"411"},{"messageId":"406","fix":"414","desc":"408"},{"messageId":"409","fix":"415","desc":"411"},{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},[2852,2860],"\"name\"",[2897,2913],"\"regularPrice\"",[2958,2971],"\"sellPrice\"",[3013,3022],"\"stock\"",[3060,3067],"\"sku\"",[3103,3115],"\"category\"",[3156,3173],"\"categoryBrand\"",[3219,3247],"\"categoryBrandSubCategory\"",[3304,3321],"\"discountPrice\"",[3367,3382],"\"isFlushSell\"",[3426,3444],"\"isSlideProduct\"",[3491,3510],"\"isBundleProduct\"",[3558,3576],"\"productDetails\"",{"desc":"420","fix":"421"},"Update the dependencies array to be: [brand, category, subCategory]",{"range":"422","text":"423"},"removeEscape",{"range":"424","text":"425"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"426","text":"427"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"428","text":"425"},{"range":"429","text":"427"},{"range":"430","text":"425"},{"range":"431","text":"427"},"Update the dependencies array to be: [isOpen, product.photos, productId]",{"range":"432","text":"433"},"Update the dependencies array to be: [categoryId, getCategorie, getCategoryBrand]",{"range":"434","text":"435"},"Update the dependencies array to be: [brandId, getBrandInfo, getSubBrandCategory]",{"range":"436","text":"437"},[2067,2080],"[brand, category, subCategory]",[284,285],"",[284,284],"\\",[286,287],[286,286],[288,289],[288,288],[1105,1113],"[isOpen, product.photos, productId]",[966,968],"[categoryId, getCategorie, getCategoryBrand]",[996,998],"[brandId, getBrandInfo, getSubBrandCategory]"]